[ 2020-04-07T00:18:02+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000032s ]
INFO: [ app_init ] --END-- [ RunTime:0.000567s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000536s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000573s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0707s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0127s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') LIMIT 1   [ RunTime:0.0467s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0011s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000063s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000109s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.045460s ]
INFO: [ view_parse ] --END-- [ RunTime:0.045508s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000396s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000422s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000535s ]
INFO: [ app_end ] --END-- [ RunTime:0.000568s ]

[ 2020-04-07T00:18:04+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000016s ]
INFO: [ app_init ] --END-- [ RunTime:0.000309s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000365s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000398s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0107s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000065s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000107s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.017532s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017571s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000176s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000198s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000339s ]
INFO: [ app_end ] --END-- [ RunTime:0.000367s ]

[ 2020-04-07T00:18:05+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000252s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000299s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000351s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000082s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000127s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007333s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007367s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000134s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000156s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000307s ]
INFO: [ app_end ] --END-- [ RunTime:0.000336s ]

[ 2020-04-07T00:18:06+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586189885749
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000309s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000309s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000349s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000318s ]
INFO: [ app_end ] --END-- [ RunTime:0.000353s ]

[ 2020-04-07T00:18:46+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=catchimage&
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000260s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000354s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000390s ]
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0023s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b5664b25d8.png','edf046e024605b50ca8584ace04d045d.png','1','1','126048','1586189926','1') [ RunTime:0.0161s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b5665c9950.png','a6ec545fe274fa6913f462c322d89de1.png','1','1','123953','1586189926','1') [ RunTime:0.0002s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b5666121ab.png','9c862288c864ece7d9c3e8114f0e56a1.png','1','1','11965','1586189926','1') [ RunTime:0.0002s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000464s ]
INFO: [ app_end ] --END-- [ RunTime:0.000503s ]

[ 2020-04-07T00:21:42+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000401s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000514s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000548s ]
NOTIC: [8] Undefined offset: 3 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 3 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0059s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'php' LIMIT 1   [ RunTime:0.0283s ]
SQL: UPDATE `my_tag` SET `tag_click`='6',`tablename`='article' WHERE `tag_name` = 'php' [ RunTime:0.0039s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('PHP 应用性能优化指南','','44','','PHP 应用性能优化指南','php','程序员都喜欢最新的PHP 7，因为它使PHP成为执行最快的脚本语言之一（参考PHP 7 vs HHVM 比较）。但是保持最佳性能不仅需要快速执行代码，更需要我们知道影响性能的问题点，以及这些问题的解决方案。本文涵盖了保障PHP应用平稳高速运','管理员','','<p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><a href=\"http://ym.cxzch.cn/\" target=\"_blank\" title=\"程序员\"><span class=\"wp_keywordlink\">程序员</span></a>都喜欢最新的PHP 7，因为它使PHP成为执行最快的脚本语言之一（参考<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">PHP 7 vs HHVM 比较</a>）。但是保持最佳性能不仅需要快速执行代码，更需要我们知道影响性能的问题点，以及这些问题的解决方案。本文涵盖了保障PHP应用平稳高速运行的所有知识点，大量干货来袭，强烈建议收藏。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'PHP 应用性能优化指南\' alt=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' src=\"/uploads/img1/20200407/5e8b5664b25d8.png\" alt=\"\" width=\"900\" height=\"500\"/></p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">PHP简史</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP是由拉斯姆斯·勒多夫于1995年开始开发的。起初，它只是勒多夫为了要维护个人网页，而用c语言开发的一些CGI工具程序集，我们从PHP这个缩写最初的来源“Personal Home Page”（个人主页）就可以看出这一点。然而，随着勒多夫不断地扩充它的功能，PHP逐渐成为了现在的“PHP：超文本预处理器”。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在过去的20年中，PHP的开发团队一直致力于提升PHP的性能，最引人瞩目的是于1999年引入的Zend语法解释器引擎。2000年发布的PHP 4，包含了一个內建的编译器和执行器模型，使得PHP开始有能力开发动态的Web应用。2015年PHP发布了里程碑式的版本PHP 7.0，极大的提升了Zend引擎的性能，并降低了PHP的整体内存使用率。截止到本文发稿为止，目前最新的PHP版本是7.1.4，有兴趣的话可以看看这篇文章<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">PHP7 新特性,改变变化</a>。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">怎样才算是高性能的PHP应用？</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">性能和速度不是一对同义词。实现最佳性能通常需要在速度、准确性和可扩展性之间进行权衡。例如，在开发Web应用时，如果你优先考虑速度，你可能会编写一个将所有内容都载入内存的脚本，而如果从可扩展性出发，可能你就会编写以块为单位将数据载入内存的脚本。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">基于phpLens的研究，下图展示了速度与可扩展性之间理论上的权衡关系。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'PHP 应用性能优化指南\' alt=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' src=\"/uploads/img1/20200407/5e8b5665c9950.png\" alt=\"\" width=\"768\" height=\"698\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">红线表示针对速度进行了优化的脚本，蓝线是可扩展性优先的脚本。当并发连接数低时，红线运行速度更快； 然而，随着并发连接数量的增加，红线变慢。当并发连接数上升时，蓝线也减慢；然而，下降并不那么剧烈，因此，在一定阈值后，速度优先的脚本会比可扩展性优先的脚本慢。然而，在现实当中，一些脚本可能随着运行环境的变化而表现出前后不同的性能差异。你需要仔细的观察用户的使用情况，以及应用的并发请求数量，来适时调整合适的优化策略。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">PHP代码优化最佳实践</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">编写好的PHP代码是创建快速稳定Web应用的关键一步。从一开始就遵循一些最佳实践技巧将节省后期填坑的时间。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1. 尽可能的使用PHP的内置方法</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">只要可以尽可能的使用<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">PHP的内置方法</a>，而不是自己编写相同功能的方法。花点时间去熟悉和学习PHP的内置方法，不但可以帮助你更快的编写代码，而且可以使你编写的代码更高效的运行。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2. 使用Json替代xml</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><a href=\"http://ym.cxzch.cn/\" target=\"_blank\">json_encode()</a>和<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">json_decode()</a>&nbsp;等PHP的内置方法，运行速度都非常快，所有应该优先使用Json。如果你无法避免使用xml，那么请务必使用正则表达式而不是DOM操作来进行解析。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3. 使用缓存技术</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">Memcache特别适用于减少数据库负载，而像<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">APC</a>或<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">OPcache</a>这样的字节码缓存引擎在脚本编译时可节省执行时间。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4. 减少不必要的计算</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当一个变量会被多次使用时，一开始就计算好，肯定要比每次使用时都计算一遍要更高效。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">5. 使用isset()和empty()</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">与count()、strlen()和sizeof()函数相比，<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">isset()</a>和<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">empty()</a>对于检测一个变量是否为空等场景更加简单和高效。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">6. 减少不必要的类</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果你不打算重复使用一个类或者方法，那么它就没什么存在的价值。而如果你必须要定义和使用一个类，则需要合理规划类中的方法，对于不是特别公用的方法，尽量将他们放到子类中去，因为调用子类中的方法，比调用父类方法速度更快。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">7. 在生产环境关闭用作调试的相关代码及错误报告</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">开发时打开错误报告，可以让你避免很多潜藏的Bug，而一些调试代码也有助于你定位Bug，但是当代码部署到生产环境后，这些错误报告和调试代码会拖慢你的程序速度，而且将一些错误报告直接显示给用户，也具有相当的安全风险。因此，在生产环境请关闭它们。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">8. 关闭数据库连接</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当使用完毕后，注销变量和关闭数据库连接，可以释放珍贵的内存资源。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">9. 使用聚合函数减少数据库查询</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">查询数据库时，使用聚合函数，可以减少检索数据库的频率，并且使程序运行的更快。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">10. 使用强大的字符串操作函数</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">举个例子，str_replace()比preg_replace()要快，而<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">strtr()</a>函数则比str_replace()函数快四倍。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">11. 尽量使用单引号</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果可能，尽量使用单引号替代双引号。程序运行时，会检查双引号中的变量，这会拖慢程序的性能。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">12. 尝试使用恒等运算符</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">由于“===”仅检查闭合范围，因此比使用“==”进行比较速度更快。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">PHP代码之外的性能瓶颈因素</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">优化代码当然能够提高PHP的性能。但是，还有一些代码之外的因素也会成为PHP的性能瓶颈。这就是为什么程序员需要了解代码部署的整个服务器环境，这有助于他们在编写代码时有一定的心理准备，并能够在性能出现问题时，快速识别和定位性能瓶颈。以下是你遇到性能瓶颈时需要检查的点。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1. 网络带宽</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果网络带宽不够，其传输的总数据量将会受到严重影响，使其成为最明显的性能瓶颈。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2. CPU</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果只是传输一些纯静态的HTML，则不需要消耗很多CPU资源，但是PHP毕竟创建的是动态的应用程序，根据应用的需要，你可能至少需要一台具备多核处理器的服务器来提升PHP代码的运行效率。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3. 共享内存</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">缺少共享内存可能会影响进程间通信，从而影响程序性能。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4. 文件系统</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">随着时间推移，你的文件系统可能会出现大量磁盘碎片。如果内存足够，利用内存作为文件缓存可以加快磁盘的访问速度。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">5. 进程管理</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">检查服务器的进程，确保里面没有非必要的进程。移除哪些不需要的网络协议、病毒扫描软件、邮件服务以及硬件驱动。将PHP代码运行在多线程模式，也能提高程序的响应时间。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">6. 相关的其它服务</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果你的应用程序还依赖于一些外部服务，那这些外部服务的性能瓶颈也有可能拖慢你的应用。虽然这种情况下你能做的事情不多，但你仍然可以通过你这一边的操作来减轻外部服务性能瓶颈对你的影响，例如切换到备用服务上等。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">更多PHP性能优化建议</h2><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1. 发挥OPCache的优势</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">由于默认情况下，PHP代码在执行时都会重新编译为可执行的中间代码OPCode，因此可以及时看到修改的代码所带来的变化，而不必频繁的重启PHP服务。不幸的是，如果每次在你的网站上运行时，都重新编译相同的代码会严重影响服务器的性能，这就是为什么opcode缓存或<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">OPCache</a>&nbsp;非常有用。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">OPCache是一个将编译好的代码保存到内存中的扩展。因此，下一次代码执行时，PHP将检查时间戳和文件大小，以确定源文件是否已更改。如果没有，则直接运行缓存的代码。</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">下图显示了运行无缓存的PHP应用程序，OPcache和<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">eAccelerator</a>（另一个PHP缓存工具）三者的执行时间和内存使用情况的差异。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'PHP 应用性能优化指南\' alt=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' title=\'PHP 应用性能优化指南\' src=\"/uploads/img1/20200407/5e8b5666121ab.png\" alt=\"\" width=\"652\" height=\"323\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><br/></p><center>图片来源:&nbsp;<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">Prestashop</a></center><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><br/></p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2. 识别数据库响应延迟</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如上所述，性能问题并不总是由代码引起的。大多数瓶颈都出现在应用程序必须访问资源的时候。由于PHP应用程序的数据访问层可能占用<strong style=\"margin: 0px; padding: 0px;\">最高90%的执行时间</strong>，因此你应该采取的第一步是查看代码中访问数据库的所有实例。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">确保打开SQL的慢日志，以帮助你识别和处理慢SQL，然后评估这些查询的执行效率。如果你发现查询过多，或者在单次执行过程中发现相同的查询被多次进行，你可以通过减少数据库访问时间进行调整，从而提高应用程序的性能。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3. 清理文件系统</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">清理文件系统，并确保没有使用文件系统来存储Session。最重要的是，请注意file_exists()，filesize()或filetime()等触发文件统计信息的代码。将任何这些功能置于循环中可能会导致性能问题。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4. 监控外部API接口</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">大部分对外部系统有依赖关系的应用都会调用远程API。虽然这些远程API接口你无法直接控制，但你仍可以采取一些措施来减轻源自远程API的性能问题。例如，你可以缓存API输出的数据，或者可以在后台调用这些API。为API请求设置合理的超时时间，并且如果可能的话，随时做好API没有响应的情况下的显示输出。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">5. 使用工具评估检测你的PHP代码</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">使用OPcache和监控外部API接口应该足以使大多数应用程序运行顺利；但是，如果你发现系统负载不断增加，那么可能需要使用工具来对你的PHP代码进行检测评估。完整的PHP代码检测评估虽然可能很耗时，但它可以为你提供有关应用程序性能的深入信息。幸运的是，有几个开源程序可以用于分析你的PHP代码，如<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">Xdebug</a>。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">监控PHP性能的重要性</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果你没有做好准备，你的Web应用可能前一分钟还在正常运行，但是下一分钟，一波突然激增的流量就会导致你的应用程序崩溃。 当然，优化和重构总是需要时间、精力和资金，而且投入是否值得的也很难说。因此，做出明智决策的最佳方式是<strong style=\"margin: 0px; padding: 0px;\">不断收集数据</strong>。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP性能监控软件可以帮助你立即测量所做的任何更改的影响。当然，知道要监测什么同样重要。速度和内存使用被认为是性能的最佳指标，因为它们影响到页面加载时间，这对Web应用程序至关重要。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">虽然数据收集很重要，但是当你不需要监控系统时，你应该关闭监控系统，因为大量日志同样也会对性能造成影响。当然，这样的日志可以提供有关如何提高性能的有用信息，因此你应该在高峰期间定期监控。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">未来的PHP性能</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP仍在不断进化中，在目前正在开发的PHP 8版本中，最新的功能是即时编译或JIT，它将可以为我们创建更快的Web应用。随着技术的不断进步，用户的期望也随之增加。因此，开发人员必须始终关注未来的变化。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在构建Web应用程序时，请记住，今年的工作可能在明年不起作用。你可能需要进行调整才能持续保持优秀的PHP性能。在开发过程中，应该持续重点关注如何构建适用于高并发场景的Web应用和网站，保证它们的高可用性。</p><p><a style=\"color: rgb(0, 136, 219); cursor: pointer; font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"></a><span style=\"color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px;\"></span></p><p></p><p><br/></p>','1586189885','1','1','','1586190102','0','1','0') [ RunTime:0.0021s ]
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0114s ]
SQL: SELECT `id`,`filepath` FROM `my_attachment` WHERE `filepath` IN ('img1/20200407/5e8b5664b25d8.png','img1/20200407/5e8b5665c9950.png','img1/20200407/5e8b5666121ab.png')  [ RunTime:0.0008s ]
SQL: UPDATE `my_article` SET `litpic`='/uploads/img1/20200407/5e8b5664b25d8.png!300X300.jpg',`flag`=flag+1 WHERE `id` = 559 [ RunTime:0.0004s ]
SQL: SHOW COLUMNS FROM `my_attachmentindex` [ RunTime:0.0010s ]
SQL: INSERT INTO `my_attachmentindex` (`attid`,`arcid`,`modelid`) VALUES ('387','559','1'),('388','559','1'),('389','559','1') [ RunTime:0.0197s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000078s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.004647s ]
INFO: [ view_parse ] --END-- [ RunTime:0.004696s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000263s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000299s ]

[ 2020-04-07T00:21:43+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000278s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000508s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000552s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0038s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0113s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000108s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.012521s ]
INFO: [ view_parse ] --END-- [ RunTime:0.012556s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000124s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000148s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000520s ]
INFO: [ app_end ] --END-- [ RunTime:0.000551s ]

[ 2020-04-07T00:31:40+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000031s ]
INFO: [ app_init ] --END-- [ RunTime:0.000335s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000319s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000359s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000074s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000121s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010645s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010684s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000129s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000174s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000405s ]
INFO: [ app_end ] --END-- [ RunTime:0.000454s ]

[ 2020-04-07T00:31:40+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586190700226
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000265s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000370s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000409s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000377s ]
INFO: [ app_end ] --END-- [ RunTime:0.000413s ]

[ 2020-04-07T00:32:53+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=catchimage&
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000015s ]
INFO: [ app_init ] --END-- [ RunTime:0.000263s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000427s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000471s ]
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0038s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b59b18ed93.jpg','3328777bc222c86a611d968790c6e71d.jpg','1','1','60121','1586190773','1') [ RunTime:0.0119s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b59b1e3bc2.jpeg','9c14b5529fbe8c366a1780c0ce218c63.jpeg','1','0','160515','1586190773','1') [ RunTime:0.0002s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b59b304b77.jpg','3cf44dc431825eb4a5677b04d2ffaccf.jpg','1','1','27478','1586190773','1') [ RunTime:0.0002s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b59b3dcc0d.jpeg','0d78c453753fcb4c775ae930001f51d4.jpeg','1','0','129009','1586190773','1') [ RunTime:0.0002s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b59b4366d7.jpeg','2eb76443b72a3facd8b4ec3d26e8a2c4.jpeg','1','0','173365','1586190773','1') [ RunTime:0.0002s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000860s ]
INFO: [ app_end ] --END-- [ RunTime:0.000933s ]

[ 2020-04-07T00:34:44+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000534s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000532s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000571s ]
NOTIC: [8] Undefined offset: 5 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 5 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0018s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'PHP，opcode，优化' LIMIT 1   [ RunTime:0.0034s ]
SQL: INSERT INTO `my_tag` (`tag_name`,`typeid`,`tag_sort`,`tag_status`,`posttime`,`tag_click`,`tablename`) VALUES ('PHP，opcode，优化','44','1','1','1586190884','1','article') [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0012s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('深入理解 PHP opcode 优化','','44','','PHP，opcode，优化','PHP，opcode，优化','&nbsp; &nbsp;大家好我是小楠今天给大家介绍下&nbsp;PHP opcode 优化，PHP(本文所述案例PHP版本均为7.1.3)作为一门动态脚本语言，其在zend虚拟机执行过程为：读入脚本程序字符串，经由词法分析器将其转换为单','管理员','','<p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">&nbsp; &nbsp;大家好我是小楠今天给大家介绍下&nbsp;PHP opcode 优化，PHP(本文所述案例PHP版本均为7.1.3)作为一门动态脚本语言，其在zend虚拟机执行过程为：读入脚本程序字符串，经由词法分析器将其转换为单词符号，接着语法分析器从中发现语法结构后生成抽象语法树，再经静态编译器生成opcode，最后经解释器模拟机器指令来执行每一条opcode。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在上述整个环节中，生成的opcode可以应用编译优化技术如死代码删除、条件常量传播、函数内联等各种优化来精简opcode，达到提高代码的执行性能的目的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP扩展opcache，针对生成的opcode基于共享内存支持了缓存优化。在此基础上又加入了opcode的静态编译优化。这里所述优化通常采用优化器（Optimizer）来管理，编译原理中，一般用优化遍(Opt pass)来描述每一个优化。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">整体上说，优化遍分两种：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>一种是分析pass，是提供数据流、控制流分析信息为转换pass提供辅助信息；</p></li><li><p>一种是转换pass，它会改变生成代码，包括增删指令、改变替换指令、调整指令顺序等，通常每一个pass前后可dump出生成代码的变化。</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">本文基于编译原理，结合opcache扩展提供的优化器，以PHP编译基本单位op_array、PHP执行最小单位opcode为出发点。介绍编译优化技术在Zend虚拟机中的应用，梳理各个优化遍是如何一步步优化opcode来提高代码执行性能的。最后结合PHP语言虚拟机执行给出几点展望。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2.几个概念说明</h2><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1）静态编译／解释执行／即时编译</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">静态编译（static compilation），也称事前编译（ahead-of-time compilation），简称AOT。即把源代码编译成目标代码，执行时在支持目标代码的平台上运行。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">动态编译（dynamic compilation），相对于静态编译而言，指”在运行时进行编译”。通常情况下采用解释器(interpreter)编译执行，它是指一条一条的解释执行源语言。</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">JIT编译（just-in-time compilation），即即时编译，狭义指某段代码即将第一次被执行时进行编译，而后则不用编译直接执行，它为动态编译的一种特例。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上述三类不同编译执行流程，可大体如下图来描述：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\"\" src=\"/uploads/img1/20200407/5e8b59b18ed93.jpg\" alt=\"alt\"/></p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2）数据流／控制流</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">编译优化需要从程序中获取足够多的信息，这是所有编译优化的根基。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">编译器前端产生的结果可以是语法树亦可以是某种低级中间代码。但无论结果什么形式，它对程序做什么、如何做仍然没有提供多少信息。编译器将发现每一个过程内控制流层次结构的任务留给控制流分析，将确定与数据处理有关的全局信息任务留给数据流分析。</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>控制流 是获取程序控制结构信息的形式化分析方法，它为数据流分析、依赖分析的基础。控制的一个基本模型是控制流图（Control Flow Graph,CFG）。单一过程的控制流分析有使用必经结点找循环、区间分析两种途径。</p></li><li><p>数据流 从程序代码中收集程序的语义信息，并通过代数的方法在编译时确定变量的定义和使用。数据的一个基本模型是数据流图（Data Flow Graph,DFG）。通常的数据流分析是基于控制树的分析（Control-tree-based data-flow analysis），算法分为区间分析与结构分析两种。</p></li></ul><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3）op_array</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">类似于C语言的栈帧（stack frame）概念，即一个运行程序的基本单位（一帧），一般为一次函数调用的基本单位。此处，一个函数或方法、整个PHP脚本文件、传给eval表示PHP代码的字符串都会被编译成一个op_array。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">实现上op_array为一个包含程序运行基本单位的所有信息的结构体，当然opcode数组为该结构最为重要的字段，不过除此之外还包含变量类型、注释信息、异常捕获信息、跳转信息等。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4）opcode</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">解释器执行(ZendVM)过程即是执行一个基本单位op_array内的最小优化opcode，按顺序遍历执行，执行当前opcode，会预取下一条opcode，直到最后一个RETRUN这个特殊的opcode返回退出。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这里的opcode某种程度也类似于静态编译器里的中间表示(类似于LLVM IR)，通常也采用三地址码的形式，即包含一个操作符，两个操作数及一个运算结果。其中两个操作数均包含类型信息。此处类型信息有五种，分别为：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>编译变量（Compiled Variable，简称CV），编译时变量即为php脚本中定义的变量。</p></li><li><p>内部可重用变量（VAR），供ZendVM使用的临时变量，可与其它opcode共用。</p></li><li><p>内部不可重用变量（TMP_VAR），供ZendVM使用的临时变量，不可与其它opcode共用。</p></li><li><p>常量（CONST），只读常量，值不可被更改。</p></li><li><p>无用变量(UNUSED)。由于opcode采用三地址码，不是每一个opcode均有操作数字段，缺省时用该变量补齐字段。</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">类型信息与操作符一起，供执行器匹配选择特定已编译好的C函数库模板，模拟生成机器指令来执行。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">opcode在ZendVM中以zend_op结构体来表征，其主体结构如下:</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' src=\"/uploads/img1/20200407/5e8b59b1e3bc2.jpeg\" alt=\"alt\"/></p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3.opcache optimizer优化器</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP脚本经过词法分析、语法分析生成抽象语法树结构后，再经静态编译生成opcode。它作为向不同的虚拟机执行指令的公共平台，依赖不同的虚拟机具体实现(然对于PHP来说，大部分是指ZendVM)。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在虚拟机执行opcode之前，如果对opcode进行优化可得到执行效率更高的代码，pass的作用就是优化opcode，它作用于opcde、处理opcode、分析opcode、寻找优化的机会并修改opcode产生更高执行效率的代码。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1）ZendVM优化器简介</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在Zend虚拟机（ZendVM）中，opcache的静态代码优化器即为zend opcode optimization。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">为观察优化效果及便于调试，它也提供了优化与调试选项：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>optimization<span style=\"margin: 0px; padding: 0px;\">level （opcache.optimization</span>level=0xFFFFFFFF） 优化级别，缺省打开大部分优化遍，用户亦通过传入命令行参数控制关闭</p></li><li><p>opt<span style=\"margin: 0px; padding: 0px;\">debug</span>level （opcache.opt<span style=\"margin: 0px; padding: 0px;\">debug</span>level=-1） 调试级别，缺省不打开，但提供了各优化前后opcode的变换过程</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">执行静态优化所需的脚本上下文信息则封装在结构zend_script中，如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs swift\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">typedef&nbsp;struct&nbsp;_zend_script&nbsp;{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;zend_string&nbsp;&nbsp;&nbsp;*filename;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//文件名
&nbsp;&nbsp;&nbsp;&nbsp;zend_op_array&nbsp;&nbsp;main_op_array;&nbsp;&nbsp;&nbsp;//栈帧
&nbsp;&nbsp;&nbsp;&nbsp;HashTable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function_table;&nbsp;&nbsp;//函数单位符号表信息
&nbsp;&nbsp;&nbsp;&nbsp;HashTable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class_table;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//类单位符号表信息}&nbsp;zend_script;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上述三个内容信息即作为输入参数传递给优化器供其分析优化。当然与通常的PHP扩展类似，它与opcode缓存模块一起（zend_accel）构成了opcache扩展。其在缓存加速器内嵌入了三个内部API：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimizer</span>startup 启动优化器</p></li><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimize</span>script 优化器实现优化的主逻辑</p></li><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimizer</span>shutdown 优化器产生的资源清理</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">关于opcode缓存，也是opcode非常重要的优化。其基本应用原理是大体如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">虽然PHP作为动态脚本语言，它并不会直接调用GCC/LLVM这样的整套编译器工具链，也不会调用Javac这样的纯前端编译器。但每次请求执行PHP脚本时，都经历过词法、语法、编译为opcode、VM执行的完整生命周期。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">除去执行外的前三个步骤基本就是一个前端编译器的完整过程，然而这个编译过程并不会快。假如反复执行相同的脚本，前三个步骤编译耗时将严重制约运行效率，而每次编译生成的opcode则没有变化。因此可在第一次编译时把opcode缓存到某一个地方，opcache扩展即是将其缓存到共享内存（Java则是保存到文件中），下次执行相同脚本时直接从共享内存中获取opcode，从而省去编译时间。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">opcache扩展的opcode 缓存流程大致如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' src=\"/uploads/img1/20200407/5e8b59b304b77.jpg\" alt=\"alt\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">由于本文主要集中讨论静态优化遍，关于缓存优化的具体实现此处不展开。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">2）ZendVM优化器原理</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">依“鲸书”(《高级编译器设计与实现》)所述，一个优化编译器较为合理的优化遍顺序如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\"\" src=\"/uploads/img1/20200407/5e8b59b3dcc0d.jpeg\" alt=\"alt\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上图中涉及的优化从简单的常量、死代码到循环、分支跳转，从函数调用到过程间优化，从预取、缓存到软流水、寄存器分配，当然也包含数据流、控制流分析。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当然，当前opcode优化器并没有实现上述所有优化遍，而且也没有必要实现机器相关的低层中间表示优化如寄存器分配。</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">opcache优化器接收到上述脚本参数信息后，找到最小编译单位。以此为基础，根据优化pass宏及其对应的优化级别宏，即可实现对某一个pass的注册控制。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">注册的优化中，按一定顺序组织串联各优化，包含常量优化、冗余nop删除、函数调用优化的转换pass，及数据流分析、控制流分析、调用关系分析等分析pass。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">zend<span style=\"margin: 0px; padding: 0px;\">optimize</span>script及实际的优化注册zend_optimize流程如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs swift\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">zend_optimize_script(zend_script&nbsp;*script,&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zend_long&nbsp;optimization_level,&nbsp;zend_long&nbsp;debug_level)
&nbsp;&nbsp;&nbsp;&nbsp;｜zend_optimize_op_array(&amp;script-&gt;main_op_array,&nbsp;&amp;ctx);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历二元操作符的常量操作数，由运行时转化为编译时(反向pass2)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;实际优化pass，zend_optimize
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历二元操作符的常量操作数，由编译时转化为运行时(pass2)
&nbsp;&nbsp;&nbsp;&nbsp;｜遍历op_array内函数zend_optimize_op_array(op_array,&nbsp;&amp;ctx);
&nbsp;&nbsp;&nbsp;&nbsp;｜遍历类内非用户函数zend_optimize_op_array(op_array,&nbsp;&amp;ctx);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(用户函数设static_variables)
&nbsp;&nbsp;&nbsp;&nbsp;｜若使用DFA&nbsp;pass&nbsp;&amp;&nbsp;调用图pass&nbsp;&amp;&nbsp;构建调用图成功
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历二元操作符的常量操作数，由运行时转化为编译时(反向pass2)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设置函数返回值信息，供SSA数据流分析使用
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历调用图的op_array，做DFA分析zend_dfa_analyze_op_array
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历调用图的op_array，做DFA优化zend_dfa_optimize_op_array
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若开调试，遍历dump调用图的每一个op_array(优化变换后)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;若开栈矫正优化，矫正栈大小adjust_fcall_stack_size_graph
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次遍历调用图内的的所有op_array，
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对DFA&nbsp;pass变换后新产生的常量场景，常量优化pass2再跑一遍
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;调用图op_array资源清理
&nbsp;&nbsp;&nbsp;&nbsp;｜若开栈矫正优化
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;矫正栈大小main_op_array
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;遍历矫正栈大小op_array
&nbsp;&nbsp;&nbsp;&nbsp;｜清理资源</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">该部分主要调用了SSA/DFA/CFG这几类用于opcode分析pass，涉及的pass有BB块、CFG、DFA(CFG、DOMINATORS、LIVENESS、PHI-NODE、SSA)。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">用于opcode转换的pass则集中在函数zend_optimize内，如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs objectivec\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">zend_optimize&nbsp;&nbsp;
｜op_array类型为ZEND_EVAL_CODE，不做优化
｜开debug，&nbsp;&nbsp;&nbsp;&nbsp;可dump优化前内容
｜优化pass1，&nbsp;&nbsp;常量替换、编译时常量操作变换、简单操作转换
｜优化pass2&nbsp;&nbsp;&nbsp;&nbsp;常量操作转换、条件跳转指令优化
｜优化pass3&nbsp;&nbsp;&nbsp;&nbsp;跳转指令优化、自增转换
｜优化pass4&nbsp;&nbsp;&nbsp;&nbsp;函数调用优化(主要为函数调用优化)
｜优化pass5&nbsp;&nbsp;&nbsp;&nbsp;控制流图（CFG）优化
&nbsp;｜构建流图
&nbsp;｜计算数据依赖
&nbsp;｜划分BB块(basic&nbsp;block，简称BB，数据流分析基本单位)
&nbsp;｜BB块内基于数据流分析优化
&nbsp;｜BB块间跳转优化
&nbsp;｜不可到达BB块删除&nbsp;
&nbsp;｜BB块合并
&nbsp;｜BB块外变量检查&nbsp;
&nbsp;｜重新构建优化后的op_array（基于CFG）
&nbsp;｜析构CFG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜优化pass6/7&nbsp;&nbsp;数据流分析优化
&nbsp;｜数据流分析（基于静态单赋值SSA）
&nbsp;&nbsp;｜构建SSA
&nbsp;&nbsp;｜构建CFG&nbsp;&nbsp;需要找到对应BB块序号、管理BB块数组、计算BB块后继BB、标记可到达BB块、计算BB块前驱BB
&nbsp;&nbsp;｜计算Dominator树
&nbsp;&nbsp;｜标识循环是否可简化（主要依赖于循环回边）
&nbsp;&nbsp;｜基于phi节点构建完SSA&nbsp;&nbsp;def集、phi节点位置、SSA构造重命名
&nbsp;&nbsp;｜计算use-def链
&nbsp;&nbsp;｜寻找不当依赖、后继、类型及值范围值推断
&nbsp;｜数据流优化&nbsp;&nbsp;基于SSA信息，一系列BB块内opcode优化
&nbsp;｜析构SSA
｜优化pass9&nbsp;&nbsp;&nbsp;&nbsp;临时变量优化
｜优化pass10&nbsp;&nbsp;&nbsp;冗余nop指令删除
｜优化pass11&nbsp;&nbsp;&nbsp;压缩常量表优化</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">还有其他一些优化遍如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">优化pass12&nbsp;&nbsp;&nbsp;矫正栈大小
优化pass15&nbsp;&nbsp;&nbsp;收集常量信息
优化pass16&nbsp;&nbsp;&nbsp;函数调用优化，主要是函数内联优化</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">除此之外，pass 8/13/14可能为预留pass id。由此可看出当前提供给用户选项控制的opcode转换pass有13个。但是这并不计入其依赖的数据流／控制流的分析pass。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3）函数内联pass的实现</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">通常在函数调用过程中，由于需要进行不同栈帧间切换，因此会有开辟栈空间、保存返回地址、跳转、返回到调用函数、返回值、回收栈空间等一系列函数调用开销。因此对于函数体适当大小情况下，把整个函数体嵌入到调用者（Caller）内部，从而不实际调用被调用者（Callee）是一个提升性能的利器。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">由于函数调用与目标机的应用二进制接口（ABI）强相关，静态编译器如GCC/LLVM的函数内联优化基本是在指令生成之前完成。</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">ZendVM的内联则发生在opcode生成后的FCALL指令的替换优化，pass id为16，其原理大致如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs sql\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">｜&nbsp;遍历op_array中的opcode,找到DO_XCALL四个opcode之一
｜&nbsp;opcode&nbsp;ZEND_INIT_FCALL
｜&nbsp;opcode&nbsp;ZEND_INIT_FCALL_BY_NAMEZ
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;新建opcode，操作码置为ZEND_INIT_FCALL，计算栈大小，
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更新缓存槽位，析构常量池字面量，替换当前opline的opcode
｜&nbsp;opcode&nbsp;ZEND_INIT_NS_FCALL_BY_NAME
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;新建opcode，操作码置为ZEND_INIT_FCALL，计算栈大小，
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更新缓存槽位，析构常量池字面量，替换当前opline的opcode
｜&nbsp;尝试函数内联
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;优化条件过滤&nbsp;（每个优化pass通常有较多限制条件，某些场景下
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由于缺乏足够信息不能优化或出于代价考虑而排除）&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;方法调用ZEND_INIT_METHOD_CALL，直接返回不内联
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;引用传参，直接返回不内联
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;缺省参数为命名常量，直接返回不内联
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;被调用函数有返回值，添加一条ZEND_QM_ASSIGN赋值opcode
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;被调用函数无返回值，插入一条ZEND_NOP空opcode&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;｜&nbsp;删除调用被内联函数的call&nbsp;opcode（即当前online的前一条opcode）</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如下示例代码，当调用fname()时，使用字符串变量名fname来动态调用函数foo，而没有使用直接调用的方式。此时可通过VLD扩展查看其生成的opcode，或打开opcache调试选项(opcache.opt<span style=\"margin: 0px; padding: 0px;\">debug</span>level=0xFFFFFFFF)亦可查看。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;foo()&nbsp;{&nbsp;}&nbsp;&nbsp;
$fname&nbsp;=&nbsp;&#39;foo&#39;;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">开启debug后dump可看出，发生函数调用优化前opcode序列（仅截取片段）为：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs nginx\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ASSIGN&nbsp;CV0($fname)&nbsp;string(&quot;foo&quot;)&nbsp;&nbsp;
INIT_FCALL_BY_NAME&nbsp;0&nbsp;CV0($fname)&nbsp;&nbsp;
DO_FCALL_BY_NAME</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">INIT_FCALL_BY_NAME这条opcode执行逻辑较为复杂，当开启激进内联优化后，可将上述指令序列直接合并成一条DO_FCALL string(“foo”)指令，省去间接调用的开销。这样也恰好与直接调用生成的opcode一致。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4）如何为opcache opt添加一个优化pass</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">根据以上描述，可见向当前优化器加入一个pass并不会太难，大体步骤如下：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>先向zend_optimize优化器注册一个pass宏(例如添加pass17)，并决定其优化级别。</p></li><li><p>在优化管理器某个优化pass前后调用加入的pass（例如添加一个尾递归优化pass），建议在DFA/SSA分析pass之后添加，因为此时获得的优化信息更多。</p></li><li><p>实现新加入的pass，进行定制代码转换（例如zend<span style=\"margin: 0px; padding: 0px;\">optimize</span>func_calls实现一个尾递归优化）。针对当前已有pass，主要添加转换pass，这里一般也可利用SSA/DFA的信息。不同于静态编译优化一般是在贴近于机器相关的低层中间表示优化，这里主要是在opcode层的opcode／operand相应的一些转换。</p></li><li><p>实现pass前，与函数内联类似，通常首先收集优化所需信息，然后排除掉不适用该优化的一些场景（如非真正的尾不递归调用、参数问题无法做优化等）。实现优化后，可dump优化前后生成opcode结构的变化是否优化正确、是否符合预期（如尾递归优化最终的效果是变换函数调用为forloop的形式）。</p></li></ul><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">4.一点思考</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以下是对基于动态的PHP脚本程序执行的一些看法，仅供参考。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">由于LLVM从前端到后端，从静态编译到jit整个工具链框架的支持，使得许多语言虚拟机都尝试整合。当前PHP7时代的ZendVM官方还没采用，原因之一虚拟机opcode承载着相当复杂的分析工作。相比于静态编译器的机器码每一条指令通常只干一件事情（通常是CPU指令时钟周期），opcode的操作数（operand）由于类型不固定，需要在运行期间做大量的类型检查、转换才能进行运算，这极度影响了执行效率。即使运行时采用jit，以byte code为单位编译，编译出的字节码也会与现有解释器一条一条opcode处理类似，类型需要处理、也不能把zval值直接存在寄存器。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以函数调用为例，比较现有的opcode执行与静态编译成机器码执行的区别，如下图：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' src=\"/uploads/img1/20200407/5e8b59b4366d7.jpeg\" alt=\"alt\"/></p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">类型推断</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在不改变现有opcode设计的前提下，加强类型推断能力，进而为opcode的执行提供更多的类型信息，是提高执行性能的可选方法之一。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">多层opcode</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">既然opcode承担如此复杂的分析工作，能否将其分解成多层的opcode归一化中间表示( intermediate representation, IR)。各优化可选择应用哪一层中间表示，传统编译器的中间表示依据所携带信息量、从抽象的高级语言到贴近机器码，分成高级中间表示（HIR） 、中级中间表示（MIR）、低级中间表示（LIR）。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">pass管理</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">关于opcode的优化pass管理，如前文鲸书图所述，应该尚有改进空间。虽然当前分析依赖的有数据流／控制流分析，但仍缺少诸如过程间的分析优化，pass管理如运行顺序、运行次数、注册管理、复杂pass分析的信息dump等相对于llvm等成熟框架仍有较大差距。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">JIT</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">ZendVM实现大量的zval值、类型转换等操作，这些可借助LLVM编译成机器码用于运行时，但代价是编译时间极速膨胀。当然也可采用libjit。</p><p><br/></p>','1586190700','1','1','','1586190884','0','1','7') [ RunTime:0.0029s ]
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0011s ]
SQL: SELECT `id`,`filepath` FROM `my_attachment` WHERE `filepath` IN ('img1/20200407/5e8b59b18ed93.jpg','img1/20200407/5e8b59b1e3bc2.jpeg\" alt=\"alt\"/></p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">3.opcache optimizer优化器</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP脚本经过词法分析、语法分析生成抽象语法树结构后，再经静态编译生成opcode。它作为向不同的虚拟机执行指令的公共平台，依赖不同的虚拟机具体实现(然对于PHP来说，大部分是指ZendVM)。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在虚拟机执行opcode之前，如果对opcode进行优化可得到执行效率更高的代码，pass的作用就是优化opcode，它作用于opcde、处理opcode、分析opcode、寻找优化的机会并修改opcode产生更高执行效率的代码。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">1）ZendVM优化器简介</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在Zend虚拟机（ZendVM）中，opcache的静态代码优化器即为zend opcode optimization。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">为观察优化效果及便于调试，它也提供了优化与调试选项：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>optimization<span style=\"margin: 0px; padding: 0px;\">level （opcache.optimization</span>level=0xFFFFFFFF） 优化级别，缺省打开大部分优化遍，用户亦通过传入命令行参数控制关闭</p></li><li><p>opt<span style=\"margin: 0px; padding: 0px;\">debug</span>level （opcache.opt<span style=\"margin: 0px; padding: 0px;\">debug</span>level=-1） 调试级别，缺省不打开，但提供了各优化前后opcode的变换过程</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">执行静态优化所需的脚本上下文信息则封装在结构zend_script中，如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs swift\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">typedef&nbsp;struct&nbsp;_zend_script&nbsp;{&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;zend_string&nbsp;&nbsp;&nbsp;*filename;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//文件名
&nbsp;&nbsp;&nbsp;&nbsp;zend_op_array&nbsp;&nbsp;main_op_array;&nbsp;&nbsp;&nbsp;//栈帧
&nbsp;&nbsp;&nbsp;&nbsp;HashTable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function_table;&nbsp;&nbsp;//函数单位符号表信息
&nbsp;&nbsp;&nbsp;&nbsp;HashTable&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class_table;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//类单位符号表信息}&nbsp;zend_script;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上述三个内容信息即作为输入参数传递给优化器供其分析优化。当然与通常的PHP扩展类似，它与opcode缓存模块一起（zend_accel）构成了opcache扩展。其在缓存加速器内嵌入了三个内部API：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimizer</span>startup 启动优化器</p></li><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimize</span>script 优化器实现优化的主逻辑</p></li><li><p>zend<span style=\"margin: 0px; padding: 0px;\">optimizer</span>shutdown 优化器产生的资源清理</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">关于opcode缓存，也是opcode非常重要的优化。其基本应用原理是大体如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">虽然PHP作为动态脚本语言，它并不会直接调用GCC/LLVM这样的整套编译器工具链，也不会调用Javac这样的纯前端编译器。但每次请求执行PHP脚本时，都经历过词法、语法、编译为opcode、VM执行的完整生命周期。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">除去执行外的前三个步骤基本就是一个前端编译器的完整过程，然而这个编译过程并不会快。假如反复执行相同的脚本，前三个步骤编译耗时将严重制约运行效率，而每次编译生成的opcode则没有变化。因此可在第一次编译时把opcode缓存到某一个地方，opcache扩展即是将其缓存到共享内存（Java则是保存到文件中），下次执行相同脚本时直接从共享内存中获取opcode，从而省去编译时间。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">opcache扩展的opcode 缓存流程大致如下：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'深入理解 PHP opcode 优化\' alt=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' title=\'深入理解 PHP opcode 优化\' src=\"img1/20200407/5e8b59b304b77.jpg')  [ RunTime:0.0008s ]
SQL: UPDATE `my_article` SET `litpic`='/uploads/img1/20200407/5e8b59b18ed93.jpg!300X300.jpg' WHERE `id` = 560 [ RunTime:0.0004s ]
SQL: SHOW COLUMNS FROM `my_attachmentindex` [ RunTime:0.0006s ]
SQL: INSERT INTO `my_attachmentindex` (`attid`,`arcid`,`modelid`) VALUES ('390','560','1') [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000032s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000079s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.020206s ]
INFO: [ view_parse ] --END-- [ RunTime:0.020242s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000268s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000291s ]

[ 2020-04-07T00:34:46+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000252s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000359s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000401s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0069s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0008s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0020s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0009s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000081s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000130s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015361s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015409s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000145s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000169s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000554s ]
INFO: [ app_end ] --END-- [ RunTime:0.000586s ]

[ 2020-04-07T00:36:19+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000020s ]
INFO: [ app_init ] --END-- [ RunTime:0.000788s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000474s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000507s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000100s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000153s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.069795s ]
INFO: [ view_parse ] --END-- [ RunTime:0.069827s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000281s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000327s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000476s ]
INFO: [ app_end ] --END-- [ RunTime:0.000507s ]

[ 2020-04-07T00:36:20+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586190979721
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000241s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000448s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000481s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000310s ]
INFO: [ app_end ] --END-- [ RunTime:0.000341s ]

[ 2020-04-07T00:37:10+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=catchimage&
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000309s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000316s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000350s ]
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0030s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b5ab63d031.jpg','15d7254076591b6eb3e20f5034964348.jpg','1','1','68828','1586191030','1') [ RunTime:0.0018s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.008526s ]
INFO: [ app_end ] --END-- [ RunTime:0.008571s ]

[ 2020-04-07T00:37:58+08:00 ] 110.245.45.41 /xn_admin.php
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000424s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000545s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000583s ]
SQL: SHOW COLUMNS FROM `my_menu` [ RunTime:0.0048s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 ORDER BY sort,id  [ RunTime:0.0033s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 AND `quick` = 1 ORDER BY sort,id  [ RunTime:0.0064s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000045s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000085s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015974s ]
INFO: [ view_parse ] --END-- [ RunTime:0.016027s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000350s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000379s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000484s ]
INFO: [ app_end ] --END-- [ RunTime:0.000529s ]

[ 2020-04-07T00:37:59+08:00 ] 110.245.45.41 /xn_admin.php?s=/Index/getParentCate&pid=0&rnd=53301
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000250s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000324s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000354s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_model` [ RunTime:0.0015s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 LIMIT 1   [ RunTime:0.0042s ]
SQL: SELECT category.id AS id,category.name AS name,category.ename AS ename,category.catpic AS catpic,category.pid AS pid,category.modelid AS modelid,category.type AS type,category.seotitle AS seotitle,category.keywords AS keywords,category.description AS description,category.template_category AS template_category,category.template_list AS template_list,category.template_show AS template_show,category.status AS status,category.sort AS sort,category.property AS property,model.name AS modelname,model.tablename AS tablename FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 ORDER BY category.sort ASC,category.id ASC  [ RunTime:0.0007s ]

[ 2020-04-07T00:38:00+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586191079788
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000255s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000298s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000330s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000318s ]
INFO: [ app_end ] --END-- [ RunTime:0.000351s ]

[ 2020-04-07T00:38:43+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000257s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000302s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000334s ]
NOTIC: [8] Undefined offset: 1 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 1 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0010s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'PHP' LIMIT 1   [ RunTime:0.0020s ]
SQL: UPDATE `my_tag` SET `tag_click`='7',`tablename`='article' WHERE `tag_name` = 'PHP' [ RunTime:0.0065s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0008s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('PHP 协程实现过程详解','','44','','PHP，协程实现过程详解','PHP','实现 PHP 协程需要了解的基本内容。多进程/线程最早的服务器端程序都是通过多进程、多线程来解决并发IO的问题。进程模型出现的最早，从Unix 系统诞生就开始有了进程的概念。最早的服务器端程序一般都是 Accept 一个客户端连接就创建一个','管理员','','<p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">实现 PHP 协程需要了解的基本内容。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">多进程/线程</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">最早的服务器端程序都是通过多进程、多线程来解决并发IO的问题。进程模型出现的最早，从Unix 系统诞生就开始有了进程的概念。最早的服务器端程序一般都是 Accept 一个客户端连接就创建一个进程，然后子进程进入循环同步阻塞地与客户端连接进行交互，收发处理数据。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">多线程模式出现要晚一些，线程与进程相比更轻量，而且线程之间共享内存堆栈，所以不同的线程之间交互非常容易实现。比如实现一个聊天室，客户端连接之间可以交互，聊天室中的玩家可以任意的其他人发消息。用多线程模式实现非常简单，线程中可以直接向某一个客户端连接发送数据。而多进程模式就要用到管道、消息队列、共享内存等等统称进程间通信（IPC）复杂的技术才能实现。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><strong style=\"margin: 0px; padding: 0px;\">最简单的多进程服务端模型</strong></p><pre class=\"brush: php; gutter: true; first-line: 1 hljs perl\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">$serv&nbsp;=&nbsp;stream_socket_server(&quot;tcp://0.0.0.0:8000&quot;,&nbsp;$errno,&nbsp;$errstr)&nbsp;
or&nbsp;die(&quot;Create&nbsp;server&nbsp;failed&quot;);while(1)&nbsp;{
	$conn&nbsp;=&nbsp;stream_socket_accept($serv);	if&nbsp;(pcntl_fork()&nbsp;==&nbsp;0)&nbsp;{
		$request&nbsp;=&nbsp;fread($conn);		//&nbsp;do&nbsp;something
		//&nbsp;$response&nbsp;=&nbsp;&quot;hello&nbsp;world&quot;;
		fwrite($response);
		fclose($conn);		exit(0);
	}
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">多进程/线程模型的流程是：</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">创建一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">socket</code>，绑定服务器端口（<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">bind</code>），监听端口（<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">listen</code>），在 PHP 中用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">stream_socket_server</code>&nbsp;一个函数就能完成上面 3 个步骤，当然也可以使用更底层的<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">sockets</code>&nbsp;扩展分别实现。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">进入&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">while</code>&nbsp;循环，阻塞在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">accept</code>&nbsp;操作上，等待客户端连接进入。此时程序会进入睡眠状态，直到有新的客户端发起&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">connect</code>&nbsp;到服务器，操作系统会唤醒此进程。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">accept</code>&nbsp;函数返回客户端连接的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">socket</code>&nbsp;主进程在多进程模型下通过&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">fork</code>（php: pcntl_fork）创建子进程，多线程模型下使用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">pthread_create</code>（php: new Thread）创建子线程。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">下文如无特殊声明将使用进程同时表示进程/线程。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">子进程创建成功后进入&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">while</code>&nbsp;循环，阻塞在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">recv</code>（php:fread）调用上，等待客户端向服务器发送数据。收到数据后服务器程序进行处理然后使用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send</code>（php: fwrite）向客户端发送响应。长连接的服务会持续与客户端交互，而短连接服务一般收到响应就会&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">close</code>。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当客户端连接关闭时，子进程退出并销毁所有资源，主进程会回收掉此子进程。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'PHP 协程实现过程详解\' alt=\'PHP 协程实现过程详解\' title=\"\" src=\"/uploads/img1/20200407/5e8b5ab63d031.jpg\" alt=\"14906085938366.jpg\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这种模式最大的问题是，进程创建和销毁的开销很大。所以上面的模式没办法应用于非常繁忙的服务器程序。对应的改进版解决了此问题，这就是经典的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Leader-Follower</code>&nbsp;模型。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">$serv&nbsp;=&nbsp;stream_socket_server(&quot;tcp://0.0.0.0:8000&quot;,&nbsp;$errno,&nbsp;$errstr)&nbsp;
or&nbsp;die(&quot;Create&nbsp;server&nbsp;failed&quot;);for($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;32;&nbsp;$i++)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(pcntl_fork()&nbsp;==&nbsp;0)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(1)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$conn&nbsp;=&nbsp;stream_socket_accept($serv);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($conn&nbsp;==&nbsp;false)&nbsp;continue;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;do&nbsp;something
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$request&nbsp;=&nbsp;fread($conn);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$response&nbsp;=&nbsp;&quot;hello&nbsp;world&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fwrite($response);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fclose($conn);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(0);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">它的特点是程序启动后就会创建 N 个进程。每个子进程进入&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Accept</code>，等待新的连接进入。当客户端连接到服务器时，其中一个子进程会被唤醒，开始处理客户端请求，并且不再接受新的 TCP 连接。当此连接关闭时，子进程会释放，重新进入&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Accept</code>，参与处理新的连接。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这个模型的优势是完全可以复用进程，没有额外消耗，性能非常好。很多常见的服务器程序都是基于此模型的，比如 Apache、PHP-FPM。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">多进程模型也有一些缺点。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这种模型严重依赖进程的数量解决并发问题，一个客户端连接就需要占用一个进程，工作进程的数量有多少，并发处理能力就有多少。操作系统可以创建的进程数量是有限的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">启动大量进程会带来额外的进程调度消耗。数百个进程时可能进程上下文切换调度消耗占 CPU 不到 1% 可以忽略不计，如果启动数千甚至数万个进程，消耗就会直线上升。调度消耗可能占到 CPU 的百分之几十甚至 100%。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">并行和并发</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">谈到多进程以及类似同时执行多个任务的模型，就不得不先谈谈并行和并发。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">并发（Concurrency）</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">是指能处理多个同时活动的能力，并发事件之间不一定要同一时刻发生。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">并行（Parallesim）</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">是指同时刻发生的两个并发事件，具有并发的含义，但并发不一定并行。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">区别</h3><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>『并发』指的是程序的结构，『并行』指的是程序运行时的状态</p></li><li><p>『并行』一定是并发的，『并行』是『并发』设计的一种</p></li><li><p>单线程永远无法达到『并行』状态</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">正确的并发设计的标准是：</p><blockquote style=\"margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; white-space: normal;\"><p style=\"margin-top: 0px; padding: 0px;\">使多个操作可以在重叠的时间段内进行。<br/>two tasks can start, run, and complete in overlapping time periods</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">参考：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p><a href=\"http://www.vaikan.com/docs/Concurrency-is-not-Parallelism\" target=\"_blank\" style=\"color: rgb(0, 136, 219); text-decoration-line: none; cursor: pointer;\">http://www.vaikan.com/docs/Concurrency-is-not-Parallelism</a></p></li><li><p><a href=\"https://talks.golang.org/2012/waza.slide\" target=\"_blank\" style=\"color: rgb(0, 136, 219); text-decoration-line: none; cursor: pointer;\">https://talks.golang.org/2012/waza.slide</a></p></li></ul><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">迭代器 &amp; 生成器</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在了解 PHP 协程前，还有&nbsp;<strong style=\"margin: 0px; padding: 0px;\">迭代器</strong>&nbsp;和&nbsp;<strong style=\"margin: 0px; padding: 0px;\">生成器</strong>&nbsp;这两个概念需要先认识一下。</p><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">迭代器</h3><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP5 开始内置了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;即迭代器接口，所以如果你定义了一个类，并实现了<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口，那么你的这个类对象就是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ITER_OBJECT</code>&nbsp;即可迭代的，否则就是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ITER_PLAIN_OBJECT</code>。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">对于&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ITER_PLAIN_OBJECT</code>&nbsp;的类，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>&nbsp;会获取该对象的默认属性数组，然后对该数组进行迭代。</p><p><br/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">而对于&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ITER_OBJECT</code>&nbsp;的类对象，则会通过调用对象实现的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口相关函数来进行迭代。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">任何实现了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口的类都是<strong style=\"margin: 0px; padding: 0px;\">可迭代的</strong>，即都可以用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>&nbsp;语句来遍历。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">Iterator 接口</h4><pre class=\"brush: php; gutter: true; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">interface&nbsp;Iterator&nbsp;extends&nbsp;Traversable{	//&nbsp;获取当前内部标量指向的元素的数据
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;mixed&nbsp;current()
	//&nbsp;获取当前标量
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;scalar&nbsp;key()
	//&nbsp;移动到下一个标量
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;next()
	//&nbsp;重置标量
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;rewind()
	//&nbsp;检查当前标量是否有效
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;boolean&nbsp;valid()}</pre><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">常规实现 range 函数</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP 自带的 range 函数原型：</p><blockquote style=\"margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; white-space: normal;\"><p style=\"margin-top: 0px; padding: 0px;\">range — 根据范围创建数组，包含指定的元素</p><p style=\"margin-top: 0px; padding: 0px;\">array range (mixed $start , mixed $end [, number $step = 1 ])</p><p style=\"margin-top: 0px; padding: 0px;\">建立一个包含指定范围单元的数组。</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在不使用迭代器的情况要实现一个和 PHP 自带的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">range</code>&nbsp;函数类似的功能，可能会这么写：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;range&nbsp;($start,&nbsp;$end,&nbsp;$step&nbsp;=&nbsp;1){
&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;[];&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($i&nbsp;=&nbsp;$start;&nbsp;$i&nbsp;&lt;=&nbsp;$end;&nbsp;$i&nbsp;+=&nbsp;$step)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret[]&nbsp;=&nbsp;$i;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$ret;
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">需要将生成的所有元素放在内存数组中，如果需要生成一个非常大的集合，则会占用巨大的内存。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">迭代器实现 xrange 函数</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">来看看迭代实现的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">range</code>，我们叫做&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">xrange</code>，他实现了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口必须的 5 个方法：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">class&nbsp;Xrange&nbsp;implements&nbsp;Iterator{&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$start;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$limit;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$step;&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$current;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct($start,&nbsp;$limit,&nbsp;$step&nbsp;=&nbsp;1)
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;start&nbsp;=&nbsp;$start;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;limit&nbsp;=&nbsp;$limit;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;step&nbsp;&nbsp;=&nbsp;$step;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;rewind()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;current&nbsp;=&nbsp;$this-&gt;start;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;next()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;current&nbsp;+=&nbsp;$this-&gt;step;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;current()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;current;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;key()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;current&nbsp;+&nbsp;1;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;valid()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;current&nbsp;&lt;=&nbsp;$this-&gt;limit;
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">使用时代码如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">foreach&nbsp;(new&nbsp;Xrange(0,&nbsp;9)&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$val)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$key,&nbsp;&#39;&nbsp;&#39;,&nbsp;$val,&nbsp;&quot;\\n&quot;;
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">输出：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">0&nbsp;0
1&nbsp;1
2&nbsp;2
3&nbsp;3
4&nbsp;4
5&nbsp;5
6&nbsp;6
7&nbsp;7
8&nbsp;8
9&nbsp;9</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">看上去功能和&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">range()</code>&nbsp;函数所做的一致，不同点在于迭代的是一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">对象(Object)</code>&nbsp;而不是数组：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">var_dump(new&nbsp;Xrange(0,&nbsp;9));</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">输出：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">object(Xrange)#1&nbsp;(4)&nbsp;{
&nbsp;&nbsp;[&quot;start&quot;:protected]=&gt;
&nbsp;&nbsp;int(0)
&nbsp;&nbsp;[&quot;limit&quot;:protected]=&gt;
&nbsp;&nbsp;int(9)
&nbsp;&nbsp;[&quot;step&quot;:protected]=&gt;
&nbsp;&nbsp;int(1)
&nbsp;&nbsp;[&quot;current&quot;:protected]=&gt;&nbsp;&nbsp;NULL}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">另外，内存的占用情况也完全不同：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">//&nbsp;range$startMemory&nbsp;=&nbsp;memory_get_usage();
$arr&nbsp;=&nbsp;range(0,&nbsp;500000);echo&nbsp;&#39;range():&nbsp;&#39;,&nbsp;memory_get_usage()&nbsp;-&nbsp;$startMemory,&nbsp;&quot;&nbsp;bytes\\n&quot;;unset($arr);//&nbsp;xrange$startMemory&nbsp;=&nbsp;memory_get_usage();
$arr&nbsp;=&nbsp;new&nbsp;Xrange(0,&nbsp;500000);echo&nbsp;&#39;xrange():&nbsp;&#39;,&nbsp;memory_get_usage()&nbsp;-&nbsp;$startMemory,&nbsp;&quot;&nbsp;bytes\\n&quot;;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">输出：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs http\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">xrange():&nbsp;624&nbsp;bytesrange():&nbsp;72194784&nbsp;bytes</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">range()</code>&nbsp;函数在执行后占用了 50W 个元素内存空间，而&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">xrange</code>&nbsp;对象在整个迭代过程中只占用一个对象的内存。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">Yii2 Query</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在喜闻乐见的各种 PHP 框架里有不少生成器的实例，比如 Yii2 中用来构建 SQL 语句的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">\\yii\\db\\Query</code>类：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">$query&nbsp;=&nbsp;(new&nbsp;\\yii\\db\\Query)-&gt;from(&#39;user&#39;);//&nbsp;yii\\db\\BatchQueryResultforeach&nbsp;($query-&gt;batch()&nbsp;as&nbsp;$users)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;每次循环得到多条&nbsp;user&nbsp;记录}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">来看一下&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">batch()</code>&nbsp;做了什么：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">/**
*&nbsp;Starts&nbsp;a&nbsp;batch&nbsp;query.
*
*&nbsp;A&nbsp;batch&nbsp;query&nbsp;supports&nbsp;fetching&nbsp;data&nbsp;in&nbsp;batches,&nbsp;which&nbsp;can&nbsp;keep&nbsp;the&nbsp;memory&nbsp;usage&nbsp;under&nbsp;a&nbsp;limit.
*&nbsp;This&nbsp;method&nbsp;will&nbsp;return&nbsp;a&nbsp;[[BatchQueryResult]]&nbsp;object&nbsp;which&nbsp;implements&nbsp;the&nbsp;[[\\Iterator]]&nbsp;interface
*&nbsp;and&nbsp;can&nbsp;be&nbsp;traversed&nbsp;to&nbsp;retrieve&nbsp;the&nbsp;data&nbsp;in&nbsp;batches.
*
*&nbsp;For&nbsp;example,
*
*
*&nbsp;$query&nbsp;=&nbsp;(new&nbsp;Query)-&gt;from(&#39;user&#39;);
*&nbsp;foreach&nbsp;($query-&gt;batch()&nbsp;as&nbsp;$rows)&nbsp;{
*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$rows&nbsp;is&nbsp;an&nbsp;array&nbsp;of&nbsp;10&nbsp;or&nbsp;fewer&nbsp;rows&nbsp;from&nbsp;user&nbsp;table
*&nbsp;}
*
*
*&nbsp;@param&nbsp;integer&nbsp;$batchSize&nbsp;the&nbsp;number&nbsp;of&nbsp;records&nbsp;to&nbsp;be&nbsp;fetched&nbsp;in&nbsp;each&nbsp;batch.
*&nbsp;@param&nbsp;Connection&nbsp;$db&nbsp;the&nbsp;database&nbsp;connection.&nbsp;If&nbsp;not&nbsp;set,&nbsp;the&nbsp;&quot;db&quot;&nbsp;application&nbsp;component&nbsp;will&nbsp;be&nbsp;used.
*&nbsp;@return&nbsp;BatchQueryResult&nbsp;the&nbsp;batch&nbsp;query&nbsp;result.&nbsp;It&nbsp;implements&nbsp;the&nbsp;[[\\Iterator]]&nbsp;interface
*&nbsp;and&nbsp;can&nbsp;be&nbsp;traversed&nbsp;to&nbsp;retrieve&nbsp;the&nbsp;data&nbsp;in&nbsp;batches.
*/public&nbsp;function&nbsp;batch($batchSize&nbsp;=&nbsp;100,&nbsp;$db&nbsp;=&nbsp;null){&nbsp;&nbsp;&nbsp;return&nbsp;Yii::createObject([&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;class&#39;&nbsp;=&gt;&nbsp;BatchQueryResult::className(),&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;query&#39;&nbsp;=&gt;&nbsp;$this,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;batchSize&#39;&nbsp;=&gt;&nbsp;$batchSize,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;db&#39;&nbsp;=&gt;&nbsp;$db,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;each&#39;&nbsp;=&gt;&nbsp;false,
&nbsp;&nbsp;&nbsp;]);
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">实际上返回了一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">BatchQueryResult</code>&nbsp;类，类的源码实现了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口 5 个关键方法：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">class&nbsp;BatchQueryResult&nbsp;extends&nbsp;Object&nbsp;implements&nbsp;\\Iterator{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$db;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$query;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$batchSize&nbsp;=&nbsp;100;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$each&nbsp;=&nbsp;false;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$_dataReader;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$_batch;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$_value;&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;$_key;&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Destructor.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__destruct()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;make&nbsp;sure&nbsp;cursor&nbsp;is&nbsp;closed
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;reset();
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Resets&nbsp;the&nbsp;batch&nbsp;query.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;will&nbsp;clean&nbsp;up&nbsp;the&nbsp;existing&nbsp;batch&nbsp;query&nbsp;so&nbsp;that&nbsp;a&nbsp;new&nbsp;batch&nbsp;query&nbsp;can&nbsp;be&nbsp;performed.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;reset()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;_dataReader&nbsp;!==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_dataReader-&gt;close();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_dataReader&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_batch&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_value&nbsp;=&nbsp;null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_key&nbsp;=&nbsp;null;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Resets&nbsp;the&nbsp;iterator&nbsp;to&nbsp;the&nbsp;initial&nbsp;state.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;is&nbsp;required&nbsp;by&nbsp;the&nbsp;interface&nbsp;[[\\Iterator]].
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;rewind()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;reset();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;next();
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Moves&nbsp;the&nbsp;internal&nbsp;pointer&nbsp;to&nbsp;the&nbsp;next&nbsp;dataset.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;is&nbsp;required&nbsp;by&nbsp;the&nbsp;interface&nbsp;[[\\Iterator]].
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;next()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;_batch&nbsp;===&nbsp;null&nbsp;||&nbsp;!$this-&gt;each&nbsp;||&nbsp;$this-&gt;each&nbsp;&amp;&amp;&nbsp;next($this-&gt;_batch)&nbsp;===&nbsp;false)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_batch&nbsp;=&nbsp;$this-&gt;fetchData();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reset($this-&gt;_batch);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;each)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_value&nbsp;=&nbsp;current($this-&gt;_batch);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($this-&gt;query-&gt;indexBy&nbsp;!==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_key&nbsp;=&nbsp;key($this-&gt;_batch);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;elseif&nbsp;(key($this-&gt;_batch)&nbsp;!==&nbsp;null)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_key++;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_key&nbsp;=&nbsp;null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_value&nbsp;=&nbsp;$this-&gt;_batch;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_key&nbsp;=&nbsp;$this-&gt;_key&nbsp;===&nbsp;null&nbsp;?&nbsp;0&nbsp;:&nbsp;$this-&gt;_key&nbsp;+&nbsp;1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Fetches&nbsp;the&nbsp;next&nbsp;batch&nbsp;of&nbsp;data.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;array&nbsp;the&nbsp;data&nbsp;fetched
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;function&nbsp;fetchData()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;index&nbsp;of&nbsp;the&nbsp;current&nbsp;dataset.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;is&nbsp;required&nbsp;by&nbsp;the&nbsp;interface&nbsp;[[\\Iterator]].
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;integer&nbsp;the&nbsp;index&nbsp;of&nbsp;the&nbsp;current&nbsp;row.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;key()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;_key;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;the&nbsp;current&nbsp;dataset.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;is&nbsp;required&nbsp;by&nbsp;the&nbsp;interface&nbsp;[[\\Iterator]].
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;mixed&nbsp;the&nbsp;current&nbsp;dataset.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;current()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;_value;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;/**
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Returns&nbsp;whether&nbsp;there&nbsp;is&nbsp;a&nbsp;valid&nbsp;dataset&nbsp;at&nbsp;the&nbsp;current&nbsp;position.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;method&nbsp;is&nbsp;required&nbsp;by&nbsp;the&nbsp;interface&nbsp;[[\\Iterator]].
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;boolean&nbsp;whether&nbsp;there&nbsp;is&nbsp;a&nbsp;valid&nbsp;dataset&nbsp;at&nbsp;the&nbsp;current&nbsp;position.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;valid()
&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;!empty($this-&gt;_batch);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以迭代器的方式实现了类似分页取的效果，同时避免了一次性取出所有数据占用太多的内存空间。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">迭代器使用场景</h4><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>使用返回迭代器的包或库时（如 PHP5 中的 SPL 迭代器）</p></li><li><p>无法在一次调用获取所需的所有元素时</p></li><li><p>要处理数量巨大的元素时（数据库中要处理的结果集内容超过内存）</p></li><li><p>…</p></li></ul><h3 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">生成器</h3><p>需要 PHP 5 &gt;= 5.5.0 或 PHP 7</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">虽然迭代器仅需继承接口即可实现，但毕竟需要定义一整个类然后实现接口的所有方法，实在是不怎么方便。</p><blockquote style=\"margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; white-space: normal;\"><p style=\"margin-top: 0px; padding: 0px;\">生成器则提供了一种更简单的方式来实现简单的对象迭代，相比定义类来实现&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口的方式，性能开销和复杂度大大降低。</p><footer><strong style=\"margin: 0px; padding: 0px;\">PHP Manual</strong></footer></blockquote><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">生成器允许在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>&nbsp;代码块中迭代一组数据而不需要创建任何数组。一个生成器函数，就像一个普通的有返回值的自定义函数类似，但普通函数只返回一次, 而生成器可以根据需要通过&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;关键字返回多次，以便连续生成需要迭代返回的值。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">一个最简单的例子就是使用生成器来重新实现&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">xrange()</code>&nbsp;函数。效果和上面我们用迭代器实现的差不多，但实现起来要简单的多。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">生成器实现&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">xrange</code>&nbsp;函数</h4><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;xrange($start,&nbsp;$limit,&nbsp;$step&nbsp;=&nbsp;1)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;$limit;&nbsp;$i&nbsp;+=&nbsp;$step)&nbsp;{&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;yield&nbsp;$i&nbsp;+&nbsp;1&nbsp;=&gt;&nbsp;$i;
&nbsp;&nbsp;&nbsp;&nbsp;}
}foreach&nbsp;(xrange(0,&nbsp;9)&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$val)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;%d&nbsp;%d&nbsp;\\n&quot;,&nbsp;$key,&nbsp;$val);
}//&nbsp;输出//&nbsp;1&nbsp;0//&nbsp;2&nbsp;1//&nbsp;3&nbsp;2//&nbsp;4&nbsp;3//&nbsp;5&nbsp;4//&nbsp;6&nbsp;5//&nbsp;7&nbsp;6//&nbsp;8&nbsp;7//&nbsp;9&nbsp;8</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">实际上生成器生成的正是一个迭代器对象实例，该迭代器对象继承了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口，同时也包含了生成器对象自有的接口，具体可以参考&nbsp;<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">Generator</a>&nbsp;类的定义以及<a href=\"http://ym.cxzch.cn/\" target=\"_blank\">语法参考</a>。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">同时需要注意的是：</p><p>一个生成器不可以返回值，这样做会产生一个编译错误。然而 return 空是一个有效的语法并且它将会终止生成器继续执行。</p><h4 style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 14px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">yield 关键字</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">需要注意的是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;关键字，这是生成器的关键。通过上面的例子可以看出，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;会将当前产生的值传递给&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>，换句话说，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>&nbsp;每一次迭代过程都会从&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;处取一个值，直到整个遍历过程不再能执行到&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;时遍历结束，此时生成器函数简单的退出，而调用生成器的上层代码还可以继续执行，就像一个数组已经被遍历完了。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;最简单的调用形式看起来像一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">return</code>&nbsp;申明，不同的是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;暂停当前过程的执行并返回值，而&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">return</code>&nbsp;是中断当前过程并返回值。暂停当前过程，意味着将处理权转交由上一级继续进行，直到上一级再次调用被暂停的过程，该过程又会从上一次暂停的位置继续执行。这像是什么呢？如果之前已经在中粗略看过，应该知道这很像操作系统的进程调度，多个进程在一个 CPU 核心上执行，在系统调度下每一个进程执行一段指令就被暂停，切换到下一个进程，这样外部用户看起来就像是同时在执行多个任务。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">但仅仅如此还不够，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;除了可以返回值以外，还能接收值，也就是可以在两个层级间实现<strong style=\"margin: 0px; padding: 0px;\">双向通信</strong>。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">来看看如何传递一个值给&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;printer(){&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(true)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;receive:&nbsp;%s\\n&quot;,&nbsp;yield);
&nbsp;&nbsp;&nbsp;&nbsp;}
}
$printer&nbsp;=&nbsp;printer();
$printer-&gt;send(&#39;hello&#39;);
$printer-&gt;send(&#39;world&#39;);//&nbsp;输出receive:&nbsp;hello
receive:&nbsp;world</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Generator</code>&nbsp;对象除了实现&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口中的必要方法以外，还有一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send</code>&nbsp;方法，这个方法就是向&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;语句处传递一个值，同时从&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;语句处继续执行，直至再次遇到&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;后控制权回到外部。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">既然&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;可以在其位置中断并返回或者接收一个值，那能不能同时进行<strong style=\"margin: 0px; padding: 0px;\">接收</strong>和<strong style=\"margin: 0px; padding: 0px;\">返回</strong>呢？当然，这也是实现协程的根本。对上述代码做出修改：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;printer(){
&nbsp;&nbsp;&nbsp;&nbsp;$i&nbsp;=&nbsp;0;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(true)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&quot;receive:&nbsp;%s\\n&quot;,&nbsp;(yield&nbsp;++$i));
&nbsp;&nbsp;&nbsp;&nbsp;}
}
$printer&nbsp;=&nbsp;printer();
printf(&quot;%d\\n&quot;,&nbsp;$printer-&gt;current());
$printer-&gt;send(&#39;hello&#39;);
printf(&quot;%d\\n&quot;,&nbsp;$printer-&gt;current());
$printer-&gt;send(&#39;world&#39;);
printf(&quot;%d\\n&quot;,&nbsp;$printer-&gt;current());//&nbsp;输出1receive:&nbsp;hello2receive:&nbsp;world3</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这是另一个例子：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">function&nbsp;gen()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;(yield&nbsp;&#39;yield1&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;var_dump($ret);
&nbsp;&nbsp;&nbsp;&nbsp;$ret&nbsp;=&nbsp;(yield&nbsp;&#39;yield2&#39;);
&nbsp;&nbsp;&nbsp;&nbsp;var_dump($ret);
}

$gen&nbsp;=&nbsp;gen();
var_dump($gen-&gt;current());&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;string(6)&nbsp;&quot;yield1&quot;var_dump($gen-&gt;send(&#39;ret1&#39;));&nbsp;//&nbsp;string(4)&nbsp;&quot;ret1&quot;&nbsp;&nbsp;&nbsp;(第一个&nbsp;var_dump)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;string(6)&nbsp;&quot;yield2&quot;&nbsp;(继续执行到第二个&nbsp;yield，吐出了返回值)var_dump($gen-&gt;send(&#39;ret2&#39;));&nbsp;//&nbsp;string(4)&nbsp;&quot;ret2&quot;&nbsp;&nbsp;&nbsp;(第二个&nbsp;var_dump)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;NULL&nbsp;(var_dump&nbsp;之后没有其他语句，所以这次&nbsp;-&gt;send()&nbsp;的返回值为&nbsp;null)</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">current</code>&nbsp;方法是迭代器&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Iterator</code>&nbsp;接口必要的方法，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">foreach</code>&nbsp;语句每一次迭代都会通过其获取当前值，而后调用迭代器的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">next</code>&nbsp;方法。在上述例子里则是手动调用了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">current</code>&nbsp;方法获取值。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上述例子已经足以表示&nbsp;<strong style=\"margin: 0px; padding: 0px;\">yield</strong>&nbsp;能够作为实现双向通信的工具，也就是具备了后续实现协程的基本条件。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上面的例子如果第一次接触并稍加思考，不免会疑惑为什么一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;既是语句又是表达式，而且这两种情况还同时存在：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>对于所有在<strong style=\"margin: 0px; padding: 0px;\">生成器</strong>函数中出现的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>，首先它都是语句，而跟在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;后面的任何表达式的值将作为调用生成器函数的返回值，如果&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;后面没有任何表达式（变量、常量都是表达式），那么它会返回&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">NULL</code>，这一点和&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">return</code>&nbsp;语句一致。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;也是表达式，它的值就是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send</code>&nbsp;函数传过来的值（相当于一个特殊变量，只不过赋值是通过&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send</code>&nbsp;函数进行的）。只要调用send方法，并且生成器对象的迭代并未终结，那么当前位置的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code>&nbsp;就会得到&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send</code>&nbsp;方法传递过来的值，这和生成器函数有没有把这个值赋值给某个变量没有任何关系。</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这个地方可能需要仔细品味上面两个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send()</code>&nbsp;方法的例子才能理解。但可以简单的记住：</p><p>任何时候 yield 关键词即是语句：可以为生成器函数返回值；也是表达式：可以接收生成器对象发过来的值。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">除了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">send()</code>&nbsp;方法，还有一种控制生成器执行的方法是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">next()</code>&nbsp;函数：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Next()</code>，恢复生成器函数的执行直到下一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code></p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">Send()</code>，向生成器传入一个值，恢复执行直到下一个&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">yield</code></p></li></ul><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">协程</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">对于单核处理器，多进程实现多任务的原理是让操作系统给一个任务每次分配一定的 CPU 时间片，然后中断、让下一个任务执行一定的时间片接着再中断并继续执行下一个，如此反复。由于切换执行任务的速度非常快，给外部用户的感受就是多个任务的执行是同时进行的。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">多进程的调度是由操作系统来实现的，进程自身不能控制自己何时被调度，也就是说：</p><blockquote style=\"margin: 15px auto; padding: 10px 15px 5px; border-width: 1px 1px 1px 3px; border-style: solid; border-color: rgb(214, 214, 214); border-image: initial; background-color: rgb(253, 253, 253); font-size: 12px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; white-space: normal;\"><p style=\"margin-top: 0px; padding: 0px;\">进程的调度是由外层调度器抢占式实现的</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">而<strong style=\"margin: 0px; padding: 0px;\">协程</strong>要求当前正在运行的任务自动把控制权回传给调度器，这样就可以继续运行其他任务。这与『抢占式』的多任务正好相反, 抢占多任务的调度器可以强制中断正在运行的任务, 不管它自己有没有意愿。『协作式多任务』在 Windows 的早期版本 (windows95) 和 Mac OS 中有使用, 不过它们后来都切换到『抢占式多任务』了。理由相当明确：如果仅依靠程序自动交出控制的话，那么一些恶意程序将会很容易占用全部 CPU 时间而不与其他任务共享。</p><p><br/></p>','1586190979','1','1','','1586191123','0','1','7') [ RunTime:0.0027s ]
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0006s ]
SQL: SELECT `id`,`filepath` FROM `my_attachment` WHERE `filepath` IN ('img1/20200407/5e8b5ab63d031.jpg')  [ RunTime:0.0005s ]
SQL: UPDATE `my_article` SET `litpic`='/uploads/img1/20200407/5e8b5ab63d031.jpg!300X300.jpg' WHERE `id` = 561 [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `my_attachmentindex` [ RunTime:0.0006s ]
SQL: INSERT INTO `my_attachmentindex` (`attid`,`arcid`,`modelid`) VALUES ('395','561','1') [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000064s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015243s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015273s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000123s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000144s ]

[ 2020-04-07T00:38:44+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000246s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000320s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000381s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0093s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0019s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000060s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000093s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010652s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010682s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000122s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000145s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000335s ]
INFO: [ app_end ] --END-- [ RunTime:0.000364s ]

[ 2020-04-07T00:38:51+08:00 ] 110.245.45.41 /xn_admin.php?s=/System/clearCache
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000261s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000366s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000400s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000332s ]
INFO: [ app_end ] --END-- [ RunTime:0.000369s ]

[ 2020-04-07T00:38:53+08:00 ] 110.245.45.41 /xn_admin.php?s=/Sitemap/index
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000257s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000353s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000386s ]
SQL: SHOW COLUMNS FROM `my_config` [ RunTime:0.0014s ]
SQL: SELECT `name`,`value`,`typeid` FROM `my_config`  [ RunTime:0.0126s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0008s ]
SQL: SELECT `id`,`title`,`keywords`,`litpic`,`publishtime`,`click`,`cid` FROM `my_article` WHERE ( status=1 ) UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_picture WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_soft WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_special WHERE status=1 ORDER BY id desc LIMIT 10000 [ RunTime:0.0114s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0009s ]
SQL: SHOW COLUMNS FROM `my_model` [ RunTime:0.0007s ]
SQL: SELECT category.id AS id,category.name AS name,category.ename AS ename,category.catpic AS catpic,category.pid AS pid,category.modelid AS modelid,category.type AS type,category.seotitle AS seotitle,category.keywords AS keywords,category.description AS description,category.template_category AS template_category,category.template_list AS template_list,category.template_show AS template_show,category.status AS status,category.sort AS sort,category.property AS property,model.name AS modelname,model.tablename AS tablename FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id ORDER BY category.sort ASC,category.id ASC  [ RunTime:0.0008s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0007s ]
SQL: SELECT `id`,`title`,`keywords`,`litpic`,`publishtime`,`click`,`cid` FROM `my_article` WHERE ( status=1 ) UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_picture WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_soft WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_special WHERE status=1 ORDER BY id desc LIMIT 10000 [ RunTime:0.0009s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0012s ]
SQL: SELECT `id`,`title`,`keywords`,`litpic`,`publishtime`,`click`,`cid` FROM `my_article` WHERE ( status=1 ) UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_picture WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_soft WHERE status=1 UNION ALL SELECT id,title,keywords,litpic,publishtime,click,cid FROM my_special WHERE status=1 ORDER BY id desc LIMIT 10000 [ RunTime:0.0008s ]
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
NOTIC: [8] Undefined index: description /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 139 行.
NOTIC: [8] Undefined index: url /www/wwwroot/ym.cxzch.cn/App/Manage/Controller/SitemapController.class.php 第 144 行.
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000510s ]
INFO: [ app_end ] --END-- [ RunTime:0.000547s ]

[ 2020-04-07T00:41:21+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000241s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000315s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000349s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000059s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000091s ]
SQL: SHOW COLUMNS FROM `my_iteminfo` [ RunTime:0.0014s ]
SQL: SELECT * FROM `my_iteminfo` WHERE `group` = 'flagtype' ORDER BY sort,id  [ RunTime:0.0004s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.022495s ]
INFO: [ view_parse ] --END-- [ RunTime:0.022529s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000144s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000168s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000376s ]
INFO: [ app_end ] --END-- [ RunTime:0.000414s ]

[ 2020-04-07T00:41:23+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000240s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000312s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000346s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0094s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000060s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000090s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014419s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014454s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000124s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000146s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000342s ]
INFO: [ app_end ] --END-- [ RunTime:0.000370s ]

[ 2020-04-07T00:41:24+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000239s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000318s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000350s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0012s ]
SQL: SHOW COLUMNS FROM `my_model` [ RunTime:0.0007s ]
SQL: SELECT category.id AS id,category.name AS name,category.ename AS ename,category.catpic AS catpic,category.pid AS pid,category.modelid AS modelid,category.type AS type,category.seotitle AS seotitle,category.keywords AS keywords,category.description AS description,category.template_category AS template_category,category.template_list AS template_list,category.template_show AS template_show,category.status AS status,category.sort AS sort,category.property AS property,model.name AS modelname,model.tablename AS tablename FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.type = 0 ORDER BY category.sort ASC,category.id ASC  [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000080s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000123s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.006882s ]
INFO: [ view_parse ] --END-- [ RunTime:0.006926s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000137s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000160s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000310s ]
INFO: [ app_end ] --END-- [ RunTime:0.000337s ]

[ 2020-04-07T00:41:25+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586191284654
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000295s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000303s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000335s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000348s ]
INFO: [ app_end ] --END-- [ RunTime:0.000395s ]

[ 2020-04-07T00:41:51+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=catchimage&
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000259s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000308s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000344s ]
NOTIC: [8] Undefined variable: x /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
NOTIC: [8] Undefined variable: y /www/wwwroot/ym.cxzch.cn/Include/Library/Think/Image/Driver/Gd.class.php 第 270 行.
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0010s ]
SQL: INSERT INTO `my_attachment` (`filepath`,`title`,`haslitpic`,`filetype`,`filesize`,`uploadtime`,`aid`) VALUES ('img1/20200407/5e8b5bcf1c8ed.png','4666511fa0d53179215dfa5cb7d3b41e.png','1','1','70544','1586191311','1') [ RunTime:0.0035s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000442s ]
INFO: [ app_end ] --END-- [ RunTime:0.000479s ]

[ 2020-04-07T00:42:38+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000015s ]
INFO: [ app_init ] --END-- [ RunTime:0.000333s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000434s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000476s ]
NOTIC: [8] Undefined offset: 1 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 1 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0011s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'PHP， 垃圾回收机制详解' LIMIT 1   [ RunTime:0.0068s ]
SQL: INSERT INTO `my_tag` (`tag_name`,`typeid`,`tag_sort`,`tag_status`,`posttime`,`tag_click`,`tablename`) VALUES ('PHP， 垃圾回收机制详解','44','1','1','1586191358','1','article') [ RunTime:0.0014s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0009s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('PHP 垃圾回收机制详解','','44','','PHP，垃圾回收机制详解','PHP， 垃圾回收机制详解','PHP的基本GC概念PHP语言同其他语言一样，具有垃圾回收机制。那么今天我们要为大家讲解的内容就是关于PHP垃圾回收机制的相关问题。希望对大家有所帮助。PHP strtotime应用经验之谈PHP memory_get_usage()管理内','管理员','','<h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\"><a href=\"http://ym.cxzch.cn/\" target=\"_self\">PHP的基本GC概念</a></h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP语言同其他语言一样，具有垃圾回收机制。那么今天我们要为大家讲解的内容就是关于PHP垃圾回收机制的相关问题。希望对大家有所帮助。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP strtotime应用经验之谈PHP memory_get_usage()管理内存PHP unset全局变量运用问题详解PHP unset()函数销毁变量教你快速实现PHP全站权限验证一、PHP 垃圾回收机制(Garbage Collector 简称GC) 在PHP中，没有任何变量指向这个对象时，这个对象就成为垃圾。PHP会将其在内存中销毁；这是PHP的GC垃圾处理机制，防止内存溢出。当一个PHP线程结束时，当前占用的所有内存空间都会被销毁，当前程序中所有对象同时被销毁。GC进程一般都跟着每起一个SESSION而开始运行的.gc目的是为了在session文件过期以后自动销毁删除这些文件.二、__destruct /unset __destruct() 析构函数，是在垃圾对象被回收时执行。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">unset 销毁的是指向对象的变量，而不是这个对象。三、 Session 与PHP垃圾回收机制由于PHP的工作机制，它并没有一个daemon线程来定期的扫描Session信息并判断其是否失效，当一个有效的请求发生时，PHP 会根据全局变量 session.gc_probability和session.gc_divisor的值，来决定是否启用一个GC。 在默认情况下，session.gc_probability=1, session.gc_divisor =100也就是说有1%的可能性启动GC(也就是说100个请求中只有一个gc会伴随100个中的某个请求而启动).</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">PHP垃圾回收机制的工作就是扫描所有的Session信息，用当前时间减去session最后修改的时间，同session.gc_maxlifetime参数进行比较，如果生存时间超过gc_maxlifetime(默认24分钟),就将该session删除。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">但是，如果你Web服务器有多个站点，多个站点时,GC处理session可能会出现意想不到的结果，原因就是：GC在工作时，并不会区分不同站点的session.那么这个时候怎么解决呢？</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>修改session.save_path,或使用session_save_path()让每个站点的session保存到一个专用目录，</p></li><li><p>提供GC的启动率，自然，PHP垃圾回收机制的启动率提高，系统的性能也会相应减低，不推荐。</p></li><li><p>在代码中判断当前session的生存时间，利用session_destroy()删除。</p></li></ul><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">引用计数基本知识</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">每个php变量存在一个叫做”zval”的变量容器中.一个zval变量容器,除了包含变量的类型和值,还包括两个字节的额外信息.</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">第一个是”is_ref”,是个bool值,用来标识这个变量是否是属于引用集合(reference set).通过这个字节,php引擎才能把普通变量和引用变量区分开.由于php允许用户通过使用&amp;来使用自定义引用,zval变量容器中还有一个内部引用计数机制,来优化内存使用.第二个额外字节是”refcount”,用来表示指向这个zval变量容器的变量(也称符号即symbol)个数.</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当一个变量被赋常量值时,就会生成一个zval变量容器,如下例所示:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;$a&nbsp;=&nbsp;&quot;new&nbsp;string&quot;;&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在上例中,新的变量是a,是在当前作用域中生成的.并且生成了类型为string和值为”new string”的变量容器.在额外的两个字节信息中,”is_ref”被默认设置为false,因为没有任何自定义的引用生成.”refcount”被设定为1,因为这里只有一个变量使用这个变量容器.调用xdebug查看一下变量内容:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;$a&nbsp;=&nbsp;&quot;new&nbsp;string&quot;;&nbsp;
&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以上代码会输出:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">a:&nbsp;(refcount=1,&nbsp;is_ref=0)=&#39;new&nbsp;string&#39;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">对变量a增加一个引用计数</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;$a&nbsp;=&nbsp;&quot;new&nbsp;string&quot;;&nbsp;
&nbsp;&nbsp;$b&nbsp;=&nbsp;$a;&nbsp;
&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以上代码会输出:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">a:&nbsp;(refcount=2,&nbsp;is_ref=0)=&#39;new&nbsp;string&#39;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这时,引用次数是2,因为同一变量容器被变量a和变量b关联.当没必要时,php不会去复制已生成的变量容器.变量容器在”refcount”变成0时就被销毁.当任何关联到某个变量容易的变量离开它的作用域(比如:函数执行结束),或者对变量调用了unset()函数,”refcount”就会减1,下面例子就能说明:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;$a&nbsp;=&nbsp;&quot;new&nbsp;string&quot;;&nbsp;
&nbsp;&nbsp;$b&nbsp;=&nbsp;$c&nbsp;=&nbsp;$a;&nbsp;
&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;unset($b,&nbsp;$c);&nbsp;
&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以上代码会输出:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">a:&nbsp;(refcount=3,&nbsp;is_ref=0)=&#39;new&nbsp;string&#39;&nbsp;a:&nbsp;(refcount=1,&nbsp;is_ref=0)=&#39;new&nbsp;string&#39;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果我们现在执行unset($a),$包含的类型和值的这个容器就会从内存删除</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">复合类型(compound types)</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当考虑像array和object这样的复合类型时,事情会稍微有些复杂.与标量(scalar)类型的值不同,array和object类型的变量把它们的成员或属性存在自己的符号表中.这意味着下面的例子将生成三个zval变量容器</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$a&nbsp;=&nbsp;array(&#39;meaning&#39;&nbsp;=&gt;&nbsp;&#39;life&#39;,&nbsp;&#39;number&#39;&nbsp;=&gt;&nbsp;42);&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以上代码输出:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">a:&nbsp;(refcount=1,&nbsp;is_ref=0)=array&nbsp;(&#39;meaning&#39;&nbsp;=&gt;&nbsp;(refcount=1,&nbsp;is_ref=0)=&#39;life&#39;,&nbsp;&#39;number&#39;&nbsp;=&gt;&nbsp;(refcount=1,&nbsp;is_ref=0)=42)</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这三个zval变量容器是:a,meaning,number.增加和减少refcount的规则和上面提到的一样特例,添加数组本身作为数组元素时:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs xml\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php&nbsp;
&nbsp;&nbsp;$a&nbsp;=&nbsp;array(&#39;one&#39;);&nbsp;

&nbsp;&nbsp;$a[]&nbsp;=&nbsp;&amp;$a;&nbsp;

&nbsp;&nbsp;xdebug_debug_zval(&#39;a&#39;);&nbsp;
&nbsp;&nbsp;?&gt;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">以上代码输出的结果:</p><pre class=\"brush: php; gutter: false; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">a:&nbsp;(refcount=2,&nbsp;is_ref=1)=array&nbsp;(0&nbsp;=&gt;&nbsp;(refcount=1,&nbsp;is_ref=0)=&#39;one&#39;,&nbsp;1&nbsp;=&gt;&nbsp;(refcount=2,&nbsp;is_ref=1)=...)</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">可以看到数组a和数组本身元素a[1]指向的变量容器refcount为2</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">当对数组$a调用unset函数时,$a的refcount变为1,发生了内存泄漏<br/>清理变量容器的问题。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">尽管不再有某个作用域中的任何符号指向这个结构(就是变量容器),由于数组元素”1″仍然指向数组本身,所以这个容器不能被消除.因为没有另外的符号指向它,用户没有办法清除这个结构,结果就会导致内存泄漏.庆幸的是,php将在请求结束时清除这个数据结构,但是php清除前,将耗费不少内存空间。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">回收周期</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">5.3.0PHP使用了新的同步周期回收算法,来处理上面所说的内存泄漏问题</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">首先,我们先要建立一些基本规则:</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果一个引用计数增加,它将继续被使用,当然就不再垃圾中.如果引用技术减少到零,所在的变量容器将被清除(free).就是说,仅仅在引用计数减少到非零值时,才会产生垃圾周期(grabage cycle).其次,在一个垃圾周期中,通过检查引用计数是否减1,并且检查哪些变量容器的引用次数是零,来发现哪部分是垃圾。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><img title=\'PHP 垃圾回收机制详解\' alt=\'PHP 垃圾回收机制详解\' alt=\'PHP 垃圾回收机制详解\' title=\"\" src=\"/uploads/img1/20200407/5e8b5bcf1c8ed.png\" alt=\"\"/></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">为避免不得不检查所有引用计数可能减少的垃圾周期,这个算法把所有可能根(possible roots 都是zval变量容器),放在根缓冲区(root buffer)中(用紫色标记),这样可以同时确保每个可能的垃圾根(possible garbage root)在缓冲区只出现一次.仅仅在根缓冲区满了时,才对缓冲区内部所有不同的变量容器执行垃圾回收操作。</p><p><br/></p>','1586191284','1','1','','1586191358','0','1','4') [ RunTime:0.0009s ]
SQL: SHOW COLUMNS FROM `my_attachment` [ RunTime:0.0007s ]
SQL: SELECT `id`,`filepath` FROM `my_attachment` WHERE `filepath` IN ('img1/20200407/5e8b5bcf1c8ed.png')  [ RunTime:0.0005s ]
SQL: UPDATE `my_article` SET `litpic`='/uploads/img1/20200407/5e8b5bcf1c8ed.png!300X300.jpg',`flag`=flag+1 WHERE `id` = 562 [ RunTime:0.0019s ]
SQL: SHOW COLUMNS FROM `my_attachmentindex` [ RunTime:0.0007s ]
SQL: INSERT INTO `my_attachmentindex` (`attid`,`arcid`,`modelid`) VALUES ('396','562','1') [ RunTime:0.0169s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000030s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000060s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.003934s ]
INFO: [ view_parse ] --END-- [ RunTime:0.003965s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000112s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000133s ]

[ 2020-04-07T00:42:39+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000286s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000349s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000382s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0009s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0004s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0088s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000060s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000092s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.015552s ]
INFO: [ view_parse ] --END-- [ RunTime:0.015585s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000151s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000174s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000377s ]
INFO: [ app_end ] --END-- [ RunTime:0.000406s ]

[ 2020-04-07T00:45:25+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000245s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000316s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000348s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000067s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000098s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008473s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008504s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000116s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000144s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.007935s ]
INFO: [ app_end ] --END-- [ RunTime:0.007970s ]

[ 2020-04-07T00:45:26+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586191525682
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000240s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000313s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000359s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000403s ]
INFO: [ app_end ] --END-- [ RunTime:0.000453s ]

[ 2020-04-07T00:48:41+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000020s ]
INFO: [ app_init ] --END-- [ RunTime:0.000274s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000293s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000326s ]
NOTIC: [8] Undefined offset: 0 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 0 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0011s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'PHP，内核分析，Zend虚拟机' LIMIT 1   [ RunTime:0.0020s ]
SQL: INSERT INTO `my_tag` (`tag_name`,`typeid`,`tag_sort`,`tag_status`,`posttime`,`tag_click`,`tablename`) VALUES ('PHP，内核分析，Zend虚拟机','44','1','1','1586191721','1','article') [ RunTime:0.0176s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0013s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('PHP 内核分析：Zend 虚拟机','','44','','PHP，内核分析，Zend虚拟机','PHP，内核分析，Zend虚拟机','大家好我是小楠，今天给大家分享下PHP 内核分析：Zend 虚拟机知识。HP 是一门解释型的语言。诸如 Java、Python、Ruby、Javascript 等解释型语言，我们编写的代码不会被编译成机器码运行，而是会被编译中间码运行在虚拟','管理员','','<p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">大家好我是小楠，今天给大家分享下<a href=\"http://ym.cxzch.cn/jishu\" target=\"_self\">PHP</a> 内核分析：Zend 虚拟机知识。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">HP 是一门解释型的语言。诸如 Java、Python、Ruby、Javascript 等解释型语言，我们编写的代码不会被编译成机器码运行，而是会被编译中间码运行在虚拟机（VM）上。运行 PHP 的虚拟机，称之为 Zend 虚拟机，今天我们将深入内核，探究 Zend 虚拟机运行的原理。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">OPCODE</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">什么是 OPCODE？它是一种虚拟机能够识别并处理的指令。Zend 虚拟机包含了一系列的 OPCODE，通过 OPCODE 虚拟机能够做很多事情，列举几个 OPCODE 的例子：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ADD</code>&nbsp;将两个操作数相加。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_NEW</code>&nbsp;创建一个 PHP 对象。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ECHO</code>&nbsp;将内容输出到标准输出中。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_EXIT</code>&nbsp;退出 PHP。</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">诸如此类的操作，PHP 定义了186个（随着 PHP 的更新，肯定会支持更多种类的 OPCODE），所有的 OPCODE 的定义和实现都可以在源码的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend/zend_vm_def.h</code>&nbsp;文件（这个文件的内容并不是原生的 C 代码，而是一个模板，后面会说明原因）中查阅到。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们来看下 PHP 是如何设计 OPCODE 数据结构：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs cpp\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">struct&nbsp;_zend_op&nbsp;{	const&nbsp;void&nbsp;*handler;
	znode_op&nbsp;op1;
	znode_op&nbsp;op2;
	znode_op&nbsp;result;	uint32_t&nbsp;extended_value;	uint32_t&nbsp;lineno;
	zend_uchar&nbsp;opcode;
	zend_uchar&nbsp;op1_type;
	zend_uchar&nbsp;op2_type;
	zend_uchar&nbsp;result_type;
};</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">仔细观察 OPCODE 的数据结构，是不是能找到汇编语言的感觉。每一个 OPCODE 都包含两个操作数，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">op1</code>和&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">op2</code>，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">handler</code>&nbsp;指针则指向了执行该 OPCODE 操作的函数，函数处理后的结果，会被保存在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">result</code>&nbsp;中。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们举一个简单的例子：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php$b&nbsp;=&nbsp;1;
$a&nbsp;=&nbsp;$b&nbsp;+&nbsp;2;</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们通过 vld 扩展看到，经过编译的后，上面的代码生成了 ZEND_ADD 指令的 OPCODE。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">compiled&nbsp;vars:&nbsp;&nbsp;!0&nbsp;=&nbsp;$b,&nbsp;!1&nbsp;=&nbsp;$a
line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#*&nbsp;E&nbsp;I&nbsp;O&nbsp;op&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;&nbsp;return&nbsp;&nbsp;operands-------------------------------------------------------------------------------------&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;E&nbsp;&gt;&nbsp;&nbsp;&nbsp;ASSIGN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;1
&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ADD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ASSIGN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!1,&nbsp;~3
&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;RETURN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">其中，第二行是&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_ADD</code>&nbsp;指令的 OPCODE。我们看到，它接收2个操作数，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">op1</code>&nbsp;是变量&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">$b</code>，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">op2</code>&nbsp;是数字常量1，返回的结果存入了临时变量中。在&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend/zend_vm_def.h</code>&nbsp;文件中，我们可以找到 ZEND_ADD 指令对应的函数实现：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ZEND_VM_HANDLER(1,&nbsp;ZEND_ADD,&nbsp;CONST|TMPVAR|CV,&nbsp;CONST|TMPVAR|CV)
{
	USE_OPLINE
	zend_free_op&nbsp;free_op1,&nbsp;free_op2;
	zval&nbsp;*op1,&nbsp;*op2,&nbsp;*result;

	op1&nbsp;=&nbsp;GET_OP1_ZVAL_PTR_UNDEF(BP_VAR_R);
	op2&nbsp;=&nbsp;GET_OP2_ZVAL_PTR_UNDEF(BP_VAR_R);	if&nbsp;(EXPECTED(Z_TYPE_INFO_P(op1)&nbsp;==&nbsp;IS_LONG))&nbsp;{		if&nbsp;(EXPECTED(Z_TYPE_INFO_P(op2)&nbsp;==&nbsp;IS_LONG))&nbsp;{
			result&nbsp;=&nbsp;EX_VAR(opline-&gt;result.var);
			fast_long_add_function(result,&nbsp;op1,&nbsp;op2);
			ZEND_VM_NEXT_OPCODE();
		}&nbsp;else&nbsp;if&nbsp;(EXPECTED(Z_TYPE_INFO_P(op2)&nbsp;==&nbsp;IS_DOUBLE))&nbsp;{
			result&nbsp;=&nbsp;EX_VAR(opline-&gt;result.var);
			ZVAL_DOUBLE(result,&nbsp;((double)Z_LVAL_P(op1))&nbsp;+&nbsp;Z_DVAL_P(op2));
			ZEND_VM_NEXT_OPCODE();
		}
	}&nbsp;else&nbsp;if&nbsp;(EXPECTED(Z_TYPE_INFO_P(op1)&nbsp;==&nbsp;IS_DOUBLE))&nbsp;{

	...
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">上面的代码并不是原生的 C 代码，而是一种模板。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">为什么这样做？因为 PHP 是弱类型语言，而其实现的 C 则是强类型语言。弱类型语言支持自动类型匹配，而自动类型匹配的实现方式，就像上述代码一样，通过判断来处理不同类型的参数。试想一下，如果每一个 OPCODE 处理的时候都需要判断传入的参数类型，那么性能势必成为极大的问题（一次请求需要处理的 OPCODE 可能能达到成千上万个）。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">哪有什么办法吗？我们发现在编译的时候，已经能够确定每个操作数的类型（可能是常量还是变量）。所以，PHP 真正执行时的 C 代码，不同类型操作数将分成不同的函数，供虚拟机直接调用。这部分代码放在了&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend/zend_vm_execute.h</code>&nbsp;中，展开后的文件相当大，而且我们注意到还有这样的代码：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs swift\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">if&nbsp;(IS_CONST&nbsp;==&nbsp;IS_CV)&nbsp;{</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">完全没有什么意义是吧？不过没有关系，C 的编译器会自动优化这样判断。大多数情况，我们希望了解某个 OPCODE 处理的逻辑，还是通过阅读模板文件&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend/zend_vm_def.h</code>&nbsp;比较容易。顺便说一下，根据模板生成 C 代码的程序就是用 PHP 实现的。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">执行过程</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">准确的来说，PHP 的执行分成了两大部分：编译和执行。这里我将不会详细展开编译的部分，而是把焦点放在执行的过程。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">通过语法、词法分析等一系列的编译过程后，我们得到了一个名为 OPArray 的数据，其结构如下：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs cpp\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">struct&nbsp;_zend_op_array&nbsp;{	/*&nbsp;Common&nbsp;elements&nbsp;*/
	zend_uchar&nbsp;type;
	zend_uchar&nbsp;arg_flags[3];&nbsp;/*&nbsp;bitset&nbsp;of&nbsp;arg_info.pass_by_reference&nbsp;*/
	uint32_t&nbsp;fn_flags;
	zend_string&nbsp;*function_name;
	zend_class_entry&nbsp;*scope;
	zend_function&nbsp;*prototype;	uint32_t&nbsp;num_args;	uint32_t&nbsp;required_num_args;
	zend_arg_info&nbsp;*arg_info;	/*&nbsp;END&nbsp;of&nbsp;common&nbsp;elements&nbsp;*/

	uint32_t&nbsp;*refcount;	uint32_t&nbsp;last;
	zend_op&nbsp;*opcodes;	int&nbsp;last_var;	uint32_t&nbsp;T;
	zend_string&nbsp;**vars;	int&nbsp;last_live_range;	int&nbsp;last_try_catch;
	zend_live_range&nbsp;*live_range;
	zend_try_catch_element&nbsp;*try_catch_array;	/*&nbsp;static&nbsp;variables&nbsp;support&nbsp;*/
	HashTable&nbsp;*static_variables;

	zend_string&nbsp;*filename;	uint32_t&nbsp;line_start;	uint32_t&nbsp;line_end;
	zend_string&nbsp;*doc_comment;	uint32_t&nbsp;early_binding;&nbsp;/*&nbsp;the&nbsp;linked&nbsp;list&nbsp;of&nbsp;delayed&nbsp;declarations&nbsp;*/

	int&nbsp;last_literal;
	zval&nbsp;*literals;	int&nbsp;&nbsp;cache_size;	void&nbsp;**run_time_cache;	void&nbsp;*reserved[ZEND_MAX_RESERVED_RESOURCES];
};</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">内容超多对吧？简单的理解，其本质就是一个 OPCODE 数组外加执行过程中所需要的环境数据的集合。介绍几个相对来说比较重要的字段：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">opcodes</code>&nbsp;存放 OPCODE 的数组。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">filename</code>&nbsp;当前执行的脚本的文件名。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">function_name</code>&nbsp;当前执行的方法名称。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">static_variables</code>&nbsp;静态变量列表。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">last_try_catch</code>&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">try_catch_array</code>&nbsp;当前上下文中，如果出现异常 try-catch-finally 跳转所需的信息。</p></li><li><p><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">literals</code>&nbsp;所有诸如字符串 foo 或者数字23，这样的常量字面量集合。</p></li></ul><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">为什么需要生成这样庞大的数据？因为编译时期生成的信息越多，执行时期所需要的时间就越少。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">接下来，我们看下 PHP 是如何执行 OPCODE。OPCODE 的执行被放在一个大循环中，这个循环位于&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend/zend_vm_execute.h</code>&nbsp;中的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">execute_ex</code>&nbsp;函数：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs cpp\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ZEND_API&nbsp;void&nbsp;execute_ex(zend_execute_data&nbsp;*ex){
	DCL_OPLINE

	zend_execute_data&nbsp;*execute_data&nbsp;=&nbsp;ex;

	LOAD_OPLINE();
	ZEND_VM_LOOP_INTERRUPT_CHECK();	while&nbsp;(1)&nbsp;{		if&nbsp;(UNEXPECTED((ret&nbsp;=&nbsp;((opcode_handler_t)OPLINE-&gt;handler)(ZEND_OPCODE_HANDLER_ARGS_PASSTHRU))&nbsp;!=&nbsp;0))&nbsp;{			if&nbsp;(EXPECTED(ret&nbsp;&gt;&nbsp;0))&nbsp;{
				execute_data&nbsp;=&nbsp;EG(current_execute_data);
				ZEND_VM_LOOP_INTERRUPT_CHECK();
			}&nbsp;else&nbsp;{				return;
			}
		}
	}

	zend_error_noreturn(E_CORE_ERROR,&nbsp;&quot;Arrived&nbsp;at&nbsp;end&nbsp;of&nbsp;main&nbsp;loop&nbsp;which&nbsp;shouldn&#39;t&nbsp;happen&quot;);
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">这里，我去掉了一些环境变量判断分支，保留了运行的主流程。可以看到，在一个无限循环中，虚拟机会不断调用 OPCODE 指定的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">handler</code>&nbsp;函数处理指令集，直到某次指令处理的结果&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ret</code>&nbsp;小于0。注意到，在主流程中并没有移动 OPCODE 数组的当前指针，而是把这个过程放到指令执行的具体函数的结尾。所以，我们在大多数 OPCODE 的实现函数的末尾，都能看到调用这个宏：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ZEND_VM_NEXT_OPCODE_CHECK_EXCEPTION();</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">在之前那个简单例子中，我们看到 vld 打印出的执行 OPCODE 数组中，最后有一项指令为&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_RETURN</code>&nbsp;的 OPCODE。但我们编写的 PHP 代码中并没有这样的语句。在编译时期，虚拟机会自动将这个指令加到 OPCODE 数组的结尾。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">ZEND_RETURN</code>&nbsp;指令对应的函数会返回 -1，判断执行的结果小于0时，就会退出循环，从而结束程序的运行。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">方法调用</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">如果我们调用一个自定义的函数，虚拟机会如何处理呢？</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?phpfunction&nbsp;foo()&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;test&#39;;
}

foo();</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们通过 vld 查看生成的 OPCODE。出现了两个 OPCODE 指令执行栈，是因为我们自定义了一个 PHP 函数。在第一个执行栈上，调用自定义函数会执行两个 OPCODE 指令：<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">INIT_FCALL</code>&nbsp;和&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">DO_FCALL</code>。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">compiled&nbsp;vars:&nbsp;&nbsp;none
line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#*&nbsp;E&nbsp;I&nbsp;O&nbsp;op&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;&nbsp;return&nbsp;&nbsp;operands-------------------------------------------------------------------------------------&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;E&nbsp;&gt;&nbsp;&nbsp;&nbsp;NOP&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INIT_FCALL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;foo&#39;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DO_FCALL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;RETURN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1compiled&nbsp;vars:&nbsp;&nbsp;none
line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#*&nbsp;E&nbsp;I&nbsp;O&nbsp;op&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;&nbsp;return&nbsp;&nbsp;operands-------------------------------------------------------------------------------------&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;E&nbsp;&gt;&nbsp;&nbsp;&nbsp;ECHO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;test&#39;
&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;RETURN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;null</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">其中，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">INIT_FCALL</code>&nbsp;准备了执行函数时所需要的上下文数据。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">DO_FCALL</code>&nbsp;负责执行函数。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">DO_FCALL</code>&nbsp;的处理函数根据不同的调用情况处理了大量逻辑，我摘取了其中执行用户定义的函数的逻辑部分：</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ZEND_VM_HANDLER(60,&nbsp;ZEND_DO_FCALL,&nbsp;ANY,&nbsp;ANY,&nbsp;SPEC(RETVAL))
{
&nbsp;&nbsp;&nbsp;&nbsp;USE_OPLINE
&nbsp;&nbsp;&nbsp;&nbsp;zend_execute_data&nbsp;*call&nbsp;=&nbsp;EX(call);
&nbsp;&nbsp;&nbsp;&nbsp;zend_function&nbsp;*fbc&nbsp;=&nbsp;call-&gt;func;
&nbsp;&nbsp;&nbsp;&nbsp;zend_object&nbsp;*object;
&nbsp;&nbsp;&nbsp;&nbsp;zval&nbsp;*ret;

&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(EXPECTED(fbc-&gt;type&nbsp;==&nbsp;ZEND_USER_FUNCTION))&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;NULL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(RETURN_VALUE_USED(opline))&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ret&nbsp;=&nbsp;EX_VAR(opline-&gt;result.var);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ZVAL_NULL(ret);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;call-&gt;prev_execute_data&nbsp;=&nbsp;execute_data;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i_init_func_execute_data(call,&nbsp;&amp;fbc-&gt;op_array,&nbsp;ret);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(EXPECTED(zend_execute_ex&nbsp;==&nbsp;execute_ex))&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ZEND_VM_ENTER();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ZEND_ADD_CALL_FLAG(call,&nbsp;ZEND_CALL_TOP);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;zend_execute_ex(call);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;&nbsp;...

&nbsp;&nbsp;&nbsp;&nbsp;ZEND_VM_SET_OPCODE(opline&nbsp;+&nbsp;1);
&nbsp;&nbsp;&nbsp;&nbsp;ZEND_VM_CONTINUE();
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">可以看到，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">DO_FCALL</code>&nbsp;首先将调用函数前的上下文数据保存到&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">call-&gt;prev_execute_data</code>，然后调用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">i_init_func_execute_data</code>&nbsp;函数，将自定义函数对象中的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">op_array</code>（每个自定义函数会在编译的时候生成对应的数据，其数据结构中包含了函数的 OPCODE 数组） 赋值给新的执行上下文对象。</p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">然后，调用&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend_execute_ex</code>&nbsp;函数，开始执行自定义的函数。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend_execute_ex</code>&nbsp;实际上就是前面提到的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">execute_ex</code>&nbsp;函数（默认是这样，但扩展可能重写&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">zend_execute_ex</code>&nbsp;指针，这个 API 让 PHP 扩展开发者可以通过覆写函数达到扩展功能的目的，不是本篇的主题，不准备深入探讨），只是上下文数据被替换成当前函数所在的上下文数据。</p><p></p><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们可以这样理解，最外层的代码就是一个默认存在的函数（类似 C 语言中的&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">main()</code>函数），和用户自定义的函数本质上是没有区别的。</p><h2 style=\"margin: 30px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom: 1px solid rgb(238, 238, 238); font-size: 18px; font-family: &quot;microsoft yahei&quot;; white-space: normal;\">逻辑跳转</h2><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们知道指令都是顺序执行的，而我们的程序，一般都包含不少的逻辑判断和循环，这部分又是如何通过 OPCODE 实现的呢？</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php$a&nbsp;=&nbsp;10;if&nbsp;($a&nbsp;==&nbsp;10)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;success&#39;;
}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;failure&#39;;
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们还是通过 vld 查看 OPCODE（不得不说 vld 扩展是分析 PHP 的神器）。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">compiled&nbsp;vars:&nbsp;&nbsp;!0&nbsp;=&nbsp;$a
line&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#*&nbsp;E&nbsp;I&nbsp;O&nbsp;op&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;&nbsp;return&nbsp;&nbsp;operands-------------------------------------------------------------------------------------&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;E&nbsp;&gt;&nbsp;&nbsp;&nbsp;ASSIGN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;10
&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;IS_EQUAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;10
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;JMPZ&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~2,&nbsp;-&gt;5
&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;ECHO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;success&#39;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;JMP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;6
&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;ECHO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;failure&#39;
&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&gt;&nbsp;RETURN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">我们看到，<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">JMPZ</code>&nbsp;和&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">JMP</code>&nbsp;控制了执行流程。<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">JMP</code>&nbsp;的逻辑非常简单，将当前的 OPCODE 指针指向需要跳转的 OPCODE。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">ZEND_VM_HANDLER(42,&nbsp;ZEND_JMP,&nbsp;JMP_ADDR,&nbsp;ANY)
{	USE_OPLINE	ZEND_VM_SET_OPCODE(OP_JMP_ADDR(opline,&nbsp;opline-&gt;op1));
	ZEND_VM_CONTINUE();
}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\"><code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">JMPZ</code>&nbsp;仅仅是多了一次判断，根据结果选择是否跳转，这里就不再重复列举了。而处理循环的方式与判断基本上是类似的。</p><pre class=\"brush: php; gutter: true; first-line: 1 hljs\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">&lt;?php$a&nbsp;=&nbsp;[1,&nbsp;2,&nbsp;3];foreach&nbsp;($a&nbsp;as&nbsp;$n)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$n;
}</pre><pre class=\"brush: php; gutter: true; first-line: 1 hljs nginx\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); background-color: rgb(251, 251, 251); word-break: break-all; overflow-wrap: break-word; white-space: pre-wrap; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: &quot;courier new&quot;; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); border-image: initial;\">compiled&nbsp;vars:&nbsp;&nbsp;!0&nbsp;=&nbsp;$a,&nbsp;!1&nbsp;=&nbsp;$nline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#*&nbsp;E&nbsp;I&nbsp;O&nbsp;op&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fetch&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ext&nbsp;&nbsp;return&nbsp;&nbsp;operands-------------------------------------------------------------------------------------&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;E&nbsp;&gt;&nbsp;&nbsp;&nbsp;ASSIGN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;&lt;array&gt;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;FE_RESET_R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!0,&nbsp;-&gt;5
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&gt;&nbsp;FE_FETCH_R&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$3,&nbsp;!1,&nbsp;-&gt;5
&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;ECHO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;JMP&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;FE_FREE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$3
&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&gt;&nbsp;RETURN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: &quot;microsoft yahei&quot;; font-size: 14px; white-space: normal;\">循环只需要&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">JMP</code>&nbsp;指令即可完成，通过&nbsp;<code style=\"margin: 0px 4px; padding: 1px 4px; font-size: 12px; font-family: &quot;courier new&quot;; color: rgb(119, 119, 119); border-radius: 2px; background-color: rgb(238, 238, 238);\">FE_FETCH_R</code>&nbsp;指令判断是否已经到达数组的结尾，如果到达则退出循环。</p><p>更多文章登录小楠资源分享网<a href=\"http://ym.cxzch.cn/jishu\">http://ym.cxzch.cn/jishu</a></p>','1586191525','1','1','','1586191721','0','1','4') [ RunTime:0.0040s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000034s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000074s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.014486s ]
INFO: [ view_parse ] --END-- [ RunTime:0.014553s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000157s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000205s ]

[ 2020-04-07T00:48:42+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000289s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000318s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000350s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0012s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0008s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000061s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000107s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.019537s ]
INFO: [ view_parse ] --END-- [ RunTime:0.027141s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000184s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000209s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000441s ]
INFO: [ app_end ] --END-- [ RunTime:0.000470s ]

[ 2020-04-07T10:04:28+08:00 ] 110.245.45.41 /xn_admin.php
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000013s ]
INFO: [ app_init ] --END-- [ RunTime:0.000367s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000314s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000350s ]
SQL: SHOW COLUMNS FROM `my_menu` [ RunTime:0.0017s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 ORDER BY sort,id  [ RunTime:0.0006s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 AND `quick` = 1 ORDER BY sort,id  [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000043s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000079s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013823s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013857s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000123s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000148s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000384s ]
INFO: [ app_end ] --END-- [ RunTime:0.000414s ]

[ 2020-04-07T10:04:30+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000307s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000321s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000360s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0013s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0008s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0004s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000075s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000127s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.027133s ]
INFO: [ view_parse ] --END-- [ RunTime:0.027177s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000155s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000178s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000371s ]
INFO: [ app_end ] --END-- [ RunTime:0.000408s ]

[ 2020-04-07T10:04:30+08:00 ] 110.245.45.41 /xn_admin.php?s=/Index/getParentCate&pid=0&rnd=55134
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000259s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000360s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000392s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_model` [ RunTime:0.0088s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT category.id AS id,category.name AS name,category.ename AS ename,category.catpic AS catpic,category.pid AS pid,category.modelid AS modelid,category.type AS type,category.seotitle AS seotitle,category.keywords AS keywords,category.description AS description,category.template_category AS template_category,category.template_list AS template_list,category.template_show AS template_show,category.status AS status,category.sort AS sort,category.property AS property,model.name AS modelname,model.tablename AS tablename FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 ORDER BY category.sort ASC,category.id ASC  [ RunTime:0.0022s ]

[ 2020-04-07T14:14:59+08:00 ] 110.245.45.41 /xn_admin.php
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000014s ]
INFO: [ app_init ] --END-- [ RunTime:0.000503s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000520s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000558s ]
SQL: SHOW COLUMNS FROM `my_menu` [ RunTime:0.0977s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 ORDER BY sort,id  [ RunTime:0.0008s ]
SQL: SELECT * FROM `my_menu` WHERE `status` = 1 AND `quick` = 1 ORDER BY sort,id  [ RunTime:0.0002s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000046s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000088s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.011892s ]
INFO: [ view_parse ] --END-- [ RunTime:0.011936s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000405s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000432s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000856s ]
INFO: [ app_end ] --END-- [ RunTime:0.000888s ]

[ 2020-04-07T14:15:00+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000246s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000317s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000350s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0017s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0011s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0030s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000110s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.028875s ]
INFO: [ view_parse ] --END-- [ RunTime:0.028914s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000176s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000203s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000356s ]
INFO: [ app_end ] --END-- [ RunTime:0.000391s ]

[ 2020-04-07T14:15:00+08:00 ] 110.245.45.41 /xn_admin.php?s=/Index/getParentCate&pid=0&rnd=45785
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000274s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000298s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000328s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0012s ]
SQL: SHOW COLUMNS FROM `my_model` [ RunTime:0.0010s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 LIMIT 1   [ RunTime:0.0005s ]
SQL: SELECT category.id AS id,category.name AS name,category.ename AS ename,category.catpic AS catpic,category.pid AS pid,category.modelid AS modelid,category.type AS type,category.seotitle AS seotitle,category.keywords AS keywords,category.description AS description,category.template_category AS template_category,category.template_list AS template_list,category.template_show AS template_show,category.status AS status,category.sort AS sort,category.property AS property,model.name AS modelname,model.tablename AS tablename FROM my_category category LEFT JOIN my_model model ON category.modelid = model.id WHERE category.pid = 0 AND category.type = 0 ORDER BY category.sort ASC,category.id ASC  [ RunTime:0.0115s ]

[ 2020-04-07T16:15:21+08:00 ] 110.245.45.41 /xn_admin.php?s=/Product/index/pid/23
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000994s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000506s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000540s ]
SQL: SHOW COLUMNS FROM `my_product` [ RunTime:0.0040s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0096s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_product product LEFT JOIN my_category category ON product.cid = category.id WHERE product.status > 0 AND product.cid IN (23,'24','25','26','27','47','50','51','52') LIMIT 1   [ RunTime:0.0008s ]
SQL: SELECT product.id AS id,product.title AS title,product.color AS color,product.keywords AS keywords,product.litpic AS litpic,product.description AS description,product.price AS price,product.marketprice AS marketprice,product.brand AS brand,product.units AS units,product.specification AS specification,product.publishtime AS publishtime,product.updatetime AS updatetime,product.click AS click,product.cid AS cid,product.commentflag AS commentflag,product.flag AS flag,product.jumpurl AS jumpurl,product.status AS status,product.userid AS userid,product.aid AS aid,product.tag AS tag,product.scores AS scores,product.demo AS demo,product.downlink AS downlink,product.downnum AS downnum,product.prop_value AS prop_value,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_product product LEFT JOIN my_category category ON product.cid = category.id WHERE product.status > 0 AND product.cid IN (23,'24','25','26','27','47','50','51','52') ORDER BY product.id DESC LIMIT 0,10   [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000063s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000099s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.020782s ]
INFO: [ view_parse ] --END-- [ RunTime:0.020824s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000941s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000967s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000503s ]
INFO: [ app_end ] --END-- [ RunTime:0.000532s ]

[ 2020-04-07T16:15:25+08:00 ] 110.245.45.41 /xn_admin.php?s=/Soft/index/pid/31
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000247s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000467s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000499s ]
SQL: SHOW COLUMNS FROM `my_soft` [ RunTime:0.0018s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_soft soft LEFT JOIN my_category category ON soft.cid = category.id WHERE soft.status > 0 AND soft.cid IN (31,'32','58','39','53','54','55','56','57','59','60','61','62','33','34','36','37','35','38') LIMIT 1   [ RunTime:0.0292s ]
SQL: SELECT soft.id AS id,soft.title AS title,soft.color AS color,soft.keywords AS keywords,soft.litpic AS litpic,soft.description AS description,soft.version AS version,soft.softtype AS softtype,soft.copytype AS copytype,soft.language AS language,soft.os AS os,soft.filesize AS filesize,soft.officialurl AS officialurl,soft.publishtime AS publishtime,soft.updatetime AS updatetime,soft.click AS click,soft.cid AS cid,soft.commentflag AS commentflag,soft.flag AS flag,soft.jumpurl AS jumpurl,soft.status AS status,soft.userid AS userid,soft.aid AS aid,soft.tag AS tag,soft.demo AS demo,soft.downnum AS downnum,soft.scores AS scores,soft.prop_value AS prop_value,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_soft soft LEFT JOIN my_category category ON soft.cid = category.id WHERE soft.status > 0 AND soft.cid IN (31,'32','58','39','53','54','55','56','57','59','60','61','62','33','34','36','37','35','38') ORDER BY soft.id DESC LIMIT 0,10   [ RunTime:0.0005s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000057s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000088s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/d300b279c4e10217698ed5a15f81b880.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.013710s ]
INFO: [ view_parse ] --END-- [ RunTime:0.013740s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000119s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000141s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000302s ]
INFO: [ app_end ] --END-- [ RunTime:0.000330s ]

[ 2020-04-07T16:15:28+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000246s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000295s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000327s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0015s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0087s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') LIMIT 1   [ RunTime:0.0028s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000056s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000086s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.010077s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010105s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000128s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000150s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000301s ]
INFO: [ app_end ] --END-- [ RunTime:0.000329s ]

[ 2020-04-07T16:15:41+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/75
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000253s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000308s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000340s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0012s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (75) LIMIT 1   [ RunTime:0.0004s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (75) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0004s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000058s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000092s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.017619s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017647s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000123s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000145s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000309s ]
INFO: [ app_end ] --END-- [ RunTime:0.000338s ]

[ 2020-04-07T16:15:43+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/75
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000040s ]
INFO: [ app_init ] --END-- [ RunTime:0.000277s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000299s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000331s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000069s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000100s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.006832s ]
INFO: [ view_parse ] --END-- [ RunTime:0.006863s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000114s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000136s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000286s ]
INFO: [ app_end ] --END-- [ RunTime:0.000314s ]

[ 2020-04-07T16:15:43+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586247340233
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000012s ]
INFO: [ app_init ] --END-- [ RunTime:0.000260s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000330s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000374s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000350s ]
INFO: [ app_end ] --END-- [ RunTime:0.000383s ]

[ 2020-04-07T16:16:46+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000252s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000315s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000349s ]
NOTIC: [8] Undefined offset: 0 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1762 行.
NOTIC: [8] Undefined offset: 0 /www/wwwroot/ym.cxzch.cn/App/Common/Common/function.php 第 1763 行.
SQL: SHOW COLUMNS FROM `my_tag` [ RunTime:0.0014s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'uni-app' LIMIT 1   [ RunTime:0.0024s ]
SQL: INSERT INTO `my_tag` (`tag_name`,`typeid`,`tag_sort`,`tag_status`,`posttime`,`tag_click`,`tablename`) VALUES ('uni-app','75','1','1','1586247406','1','article') [ RunTime:0.0026s ]
SQL: SELECT * FROM `my_tag` WHERE `tag_name` = 'v-for点击跳转指定页面' LIMIT 1   [ RunTime:0.0003s ]
SQL: INSERT INTO `my_tag` (`tag_name`,`typeid`,`tag_sort`,`tag_status`,`posttime`,`tag_click`,`tablename`) VALUES ('v-for点击跳转指定页面','75','1','1','1586247406','1','article') [ RunTime:0.0002s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0009s ]
SQL: INSERT INTO `my_article` (`title`,`jumpurl`,`cid`,`litpic`,`keywords`,`tag`,`description`,`author`,`copyfrom`,`content`,`publishtime`,`commentflag`,`status`,`shorttitle`,`updatetime`,`click`,`aid`,`flag`) VALUES ('uni-app中v-for点击跳转指定页面','','75','','uni-app,v-for点击跳转指定页面','uni-app,v-for点击跳转指定页面','&lt;template&gt;&nbsp; &nbsp; &lt;view&gt;&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- banner start --&gt;&nbsp; &nbsp; &nbsp; &n','管理员','','<p>&lt;template&gt;</p><p>&nbsp; &nbsp; &lt;view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- banner start --&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner&quot; @click=&quot;goLogin&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner-item1&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;image src=&quot;../../static/images/1级/di-banner.png&quot;&gt;&lt;/image&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner-item2&quot;&gt;狄晓伦&lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner-item0&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner-item3&quot;&gt;技术部&lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;banner-item4&quot;&gt;DIXIAOLUN&lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- banner end --&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- container start --&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;container&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;container-item&quot;&gt;</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-list-cell&quot; hover-class=&quot;uni-list-cell-hover&quot; v-for=&quot;(value,key) in list&quot; :key=&quot;key&quot; @click=&quot;goDetail(key)&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;image src=&quot;../../static/images/1级/bj-01.png&quot; class=&quot;container-img&quot;&gt;&lt;/image&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-media-list uni-pull-right&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-media-list-logo&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;image v-if=&quot;showImg&quot; :src=&quot;value.img&quot; &gt;&lt;/image&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-media-list-body&quot;&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-media-list-text-top&quot;&gt;{{value.title}}&lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;view class=&quot;uni-media-list-text-bottom uni-ellipsis&quot;&gt;{{value.content}}&lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p><br/></p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/view&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;!-- container end --&gt;</p><p>&nbsp; &nbsp; &lt;/view&gt;</p><p>&lt;/template&gt;</p><p>&lt;script&gt;</p><p>&nbsp; &nbsp; export default {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; data() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: &#39;media-list&#39;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showImg: false,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; list: [{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: &quot;巡检任务&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content: &quot;5&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; img: &quot;/static/images/1级/icon-01.png&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: &quot;设备保修&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content: &quot;29&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; img: &quot;/static/images/1级/icon-02.png&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; title: &quot;效期提醒&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; content: &quot;356&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; img: &quot;/static/images/1级/icon-03.png&quot;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; onLoad() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setTimeout(() =&gt; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.showImg = true;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, 400)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; methods: {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; goLogin(e){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;uni.navigateTo({</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;url: &quot;../login/login?data=&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;success: res =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fail: () =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;complete: () =&gt; {}</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;});</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; goDetail(e){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var that = this;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; console.log(e);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(e==0){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; that.xj();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(e==1){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; that.bx();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(e==2){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; that.tx();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xj(){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uni.navigateTo({</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url: &quot;../task/task&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; success: res =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fail: () =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; complete: () =&gt; {}</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bx(){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uni.navigateTo({</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url: &quot;../device/device&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; success: res =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fail: () =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; complete: () =&gt; {}</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tx(){</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uni.navigateTo({</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; url: &quot;../remind/remind&quot;,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; success: res =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fail: () =&gt; {},</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; complete: () =&gt; {}</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>&lt;/script&gt;</p><p><br/></p><p>&lt;style&gt;</p><p>&nbsp; &nbsp; /* banner start */</p><p>&nbsp; &nbsp; .banner {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: relative;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; margin-top: 30upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item1 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; display: flex;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; justify-content: center;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item1 image {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 690upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 286upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-image: linear-gradient(-90deg,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #f50000 0%,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #c30000 100%),</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; linear-gradient(#7babff,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #7babff);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-blend-mode: normal,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0upx 23upx 177upx 0upx rgba(195, 0, 0, 0.3);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; border-radius: 44upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item2 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 145upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 45upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-family: PingFang-SC-Bold;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-size: 48upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-weight: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-stretch: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; letter-spacing: 0px;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: #ffffff;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; left: 80upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; top: 50upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item0 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 144upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 58upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-image: linear-gradient(#fdfdfd,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #fdfdfd),</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; linear-gradient(#b0b0b0,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #b0b0b0);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-blend-mode: normal,</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0px 35upx 73upx 0px rgba(0, 0, 0, 0.16);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; border-radius: 29upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; left: 80upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; bottom: 80upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; line-height: 58upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item3 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 95upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 31upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-family: PingFang-SC-Regular;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-size: 33upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-weight: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-stretch: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; letter-spacing: 0px;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: #c30000;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; white-space: nowrap;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; padding-left: 22upx;</p><p><br/></p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .banner-item4 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 465upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 67upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-family: PingFang-SC-Bold;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-size: 89upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-weight: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-stretch: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; letter-spacing: 0px;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: #ffffff;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; opacity: 0.2;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; left: 80upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; top: 10upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; /* banner end */</p><p><br/></p><p>&nbsp; &nbsp; /* container start */</p><p>&nbsp; &nbsp; .container {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; margin-top: 100upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; display: flex;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; flex-direction: column;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; justify-content: space-between;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .container-img {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 691upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 226upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-color: #ffffff;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; /*&nbsp; &nbsp;box-shadow: 0px 23upx 27upx 2upx rgba(0, 0, 0, 0.11); */</p><p>&nbsp; &nbsp; &nbsp; &nbsp; border-radius: 20upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .container-item2 {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; margin: 50upx 0;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-media-list-logo image {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 157upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 157upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; background-color: #ffffff;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; box-shadow: 0px 0px 27upx 2upx rgba(59, 147, 253, 0.11);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; border-radius: 50%;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-list-cell {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: relative;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-media-list {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; display: flex;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; left: 50upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; top: 13upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-media-list-body {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; display: flex;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; flex-direction: column;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; justify-content: center;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; align-items: center;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; padding-left: 50upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; text-align: center;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-media-list-text-top {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 148upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 34upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-family: PingFang-SC-Regular;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-size: 36upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-weight: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-stretch: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; line-height: 90upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; letter-spacing: 0upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: #333333;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; padding-bottom: 30upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; .uni-media-list-text-bottom {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; width: 83upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; height: 36upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-family: PingFang-SC-Bold;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-size: 48upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-weight: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; font-stretch: normal;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; line-height: 90upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; letter-spacing: 0upx;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; color: #333333;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; padding-bottom: 60upx;</p><p>&nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; /* container end */</p><p>&lt;/style&gt;</p><p><br/></p><p><br/></p>','1586247343','1','1','','1586247406','0','1','6') [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000024s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000053s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.003338s ]
INFO: [ view_parse ] --END-- [ RunTime:0.003378s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000129s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000157s ]

[ 2020-04-07T16:16:47+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/75
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000262s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000302s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000335s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0011s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0009s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (75) LIMIT 1   [ RunTime:0.0004s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (75) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000064s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000097s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.008901s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008928s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000115s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000137s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000318s ]
INFO: [ app_end ] --END-- [ RunTime:0.004109s ]

[ 2020-04-07T23:59:37+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/42
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000011s ]
INFO: [ app_init ] --END-- [ RunTime:0.000423s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000520s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000555s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0031s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0247s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') LIMIT 1   [ RunTime:0.0020s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (42,'44','75','76','77','78','43','45') ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0008s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000058s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000089s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.019228s ]
INFO: [ view_parse ] --END-- [ RunTime:0.019259s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000293s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000317s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000495s ]
INFO: [ app_end ] --END-- [ RunTime:0.000526s ]

[ 2020-04-07T23:59:45+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/index/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000241s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000332s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000366s ]
SQL: SHOW COLUMNS FROM `my_article` [ RunTime:0.0068s ]
SQL: SHOW COLUMNS FROM `my_category` [ RunTime:0.0007s ]
SQL: SELECT COUNT(*) AS tp_count FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) LIMIT 1   [ RunTime:0.0004s ]
SQL: SELECT article.id AS id,article.title AS title,article.shorttitle AS shorttitle,article.color AS color,article.copyfrom AS copyfrom,article.author AS author,article.keywords AS keywords,article.litpic AS litpic,article.description AS description,article.publishtime AS publishtime,article.updatetime AS updatetime,article.click AS click,article.cid AS cid,article.commentflag AS commentflag,article.flag AS flag,article.jumpurl AS jumpurl,article.status AS status,article.userid AS userid,article.aid AS aid,article.ding AS ding,article.cai AS cai,article.tag AS tag,category.name AS catename,category.ename AS ename,category.modelid AS modelid FROM my_article article LEFT JOIN my_category category ON article.cid = category.id WHERE article.status > 0 AND article.cid IN (44) ORDER BY article.id DESC LIMIT 0,10   [ RunTime:0.0006s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000077s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000128s ]
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 130 行.
NOTIC: [8] Undefined index: p /www/wwwroot/ym.cxzch.cn/App/Runtime/Cache/Manage/f69c6ef39b3ba6d5c1d51b7a72eb971f.php 第 131 行.
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.018473s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018509s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000167s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000204s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000511s ]
INFO: [ app_end ] --END-- [ RunTime:0.000557s ]

[ 2020-04-07T23:59:47+08:00 ] 110.245.45.41 /xn_admin.php?s=/Article/add/pid/44
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000009s ]
INFO: [ app_init ] --END-- [ RunTime:0.000242s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000388s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000423s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplaceBehavior [ RunTime:0.000086s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000122s ]
INFO: Run Behavior\ParseTemplateBehavior [ RunTime:0.007954s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007991s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCacheBehavior [ RunTime:0.000124s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000152s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000338s ]
INFO: [ app_end ] --END-- [ RunTime:0.000373s ]

[ 2020-04-07T23:59:48+08:00 ] 110.245.45.41 /xn_admin.php?s=/Public/editorMethod&action=config&&noCache=1586275184861
INFO: [ app_init ] --START--
INFO: Run Behavior\BuildLiteBehavior [ RunTime:0.000010s ]
INFO: [ app_init ] --END-- [ RunTime:0.000283s ]
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCacheBehavior [ RunTime:0.000371s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000403s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTraceBehavior [ RunTime:0.000351s ]
INFO: [ app_end ] --END-- [ RunTime:0.000392s ]

